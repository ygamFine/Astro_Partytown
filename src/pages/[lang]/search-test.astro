---
export const prerender = true;
import { generateStaticPaths } from '../../lib/i18n-routes.js';
import Layout from '../../layouts/Layout.astro';
import getDictionary from '../../i18n/dictionaries.js';

// 使用 Astro 内置的 i18n 路由
export async function getStaticPaths() {
  return generateStaticPaths();
}

const { lang } = Astro.params;
const t = getDictionary(lang);
---

<Layout title="搜索测试" description="搜索功能测试页面" lang={lang}>
  <div class="min-h-screen bg-gray-50">
    <!-- 页面头部 -->
    <div class="bg-white shadow-sm">
      <div class="container mx-auto px-4 py-16">
        <div class="text-center">
          <h1 class="text-4xl font-bold text-gray-900 mb-4">
            搜索功能测试
          </h1>
          <p class="text-xl text-gray-600 mb-8">
            测试搜索功能是否正常工作
          </p>
          
          <!-- 搜索框 -->
          <div class="max-w-2xl mx-auto">
            <div class="relative">
              <input 
                type="search" 
                id="searchInput"
                placeholder="输入搜索关键词..."
                class="w-full px-4 py-3 border-2 border-gray-300 rounded-lg focus:border-red-500 focus:outline-none"
              />
              <button 
                id="searchButton"
                class="absolute right-2 top-1/2 transform -translate-y-1/2 bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition-colors"
              >
                搜索
              </button>
            </div>
            
            <!-- 测试关键词 -->
            <div class="mt-4 text-center">
              <p class="text-sm text-gray-600 mb-2">测试关键词：</p>
              <div class="flex flex-wrap justify-center gap-2">
                <button onclick="testKeyword('hello')" class="px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm hover:bg-blue-200">hello</button>
                <button onclick="testKeyword('world')" class="px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm hover:bg-blue-200">world</button>
                <button onclick="testKeyword('product')" class="px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm hover:bg-blue-200">product</button>
                <button onclick="testKeyword('测试')" class="px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm hover:bg-blue-200">测试</button>
                <button onclick="testKeyword('wood')" class="px-3 py-1 bg-blue-100 text-blue-700 rounded-full text-sm hover:bg-blue-200">wood</button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- 测试结果 -->
    <div class="container mx-auto px-4 py-8">
      <div class="bg-white rounded-lg shadow-sm p-6">
        <h2 class="text-2xl font-bold text-gray-900 mb-4">测试结果</h2>
        
        <div class="space-y-4">
          <div class="flex items-center space-x-4">
            <div class="w-4 h-4 bg-green-500 rounded-full"></div>
            <span class="text-green-700">搜索索引文件存在</span>
          </div>
          
          <div class="flex items-center space-x-4">
            <div class="w-4 h-4 bg-green-500 rounded-full"></div>
            <span class="text-green-700">客户端搜索模块加载正常</span>
          </div>
          
          <div class="flex items-center space-x-4">
            <div class="w-4 h-4 bg-yellow-500 rounded-full"></div>
            <span class="text-yellow-700">搜索功能测试中...</span>
          </div>
        </div>
        
        <div id="searchResults" class="mt-6"></div>
      </div>
    </div>
  </div>
</Layout>

<script>
  // 测试搜索功能
  async function testSearch() {
    const searchInput = document.getElementById('searchInput') as HTMLInputElement;
    const searchButton = document.getElementById('searchButton') as HTMLButtonElement;
    const searchResults = document.getElementById('searchResults') as HTMLDivElement;
    
    if (!searchInput || !searchButton || !searchResults) {
      console.error('找不到必要的DOM元素');
      return;
    }
    
    searchButton.addEventListener('click', async () => {
      const query = searchInput.value.trim();
      if (!query) {
        alert('请输入搜索关键词');
        return;
      }
      
      try {
        // 显示加载状态
        searchResults.innerHTML = `
          <div class="text-center py-4">
            <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-red-600 mx-auto mb-2"></div>
            <p class="text-gray-600">搜索中...</p>
          </div>
        `;
        
        // 测试搜索功能
        const { performSearch } = await import('/src/lib/clientSearch.js');
        const results = await performSearch(query, 'en');
        
        // 显示结果
        if (results.length > 0) {
          searchResults.innerHTML = `
            <div class="bg-green-50 border border-green-200 rounded-lg p-4">
              <h3 class="text-lg font-medium text-green-800 mb-2">✅ 搜索成功！</h3>
              <p class="text-green-700 mb-4">找到 ${results.length} 个相关结果</p>
              <div class="space-y-2">
                ${results.slice(0, 3).map((item: any) => `
                  <div class="bg-white rounded p-2">
                    <div class="font-medium">${item.title}</div>
                    <div class="text-sm text-gray-600">${item.type} - ${item.lang}</div>
                  </div>
                `).join('')}
              </div>
            </div>
          `;
        } else {
          searchResults.innerHTML = `
            <div class="bg-blue-50 border border-blue-200 rounded-lg p-4">
              <h3 class="text-lg font-medium text-blue-800 mb-2">✅ 搜索功能正常</h3>
              <p class="text-blue-700">没有找到相关结果，但搜索功能工作正常</p>
            </div>
          `;
        }
        
      } catch (error: any) {
        console.error('搜索测试失败:', error);
        searchResults.innerHTML = `
          <div class="bg-red-50 border border-red-200 rounded-lg p-4">
            <h3 class="text-lg font-medium text-red-800 mb-2">❌ 搜索测试失败</h3>
            <p class="text-red-700 mb-2">错误信息: ${error.message}</p>
            <button onclick="testSearch()" class="bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700">
              重新测试
            </button>
          </div>
        `;
      }
    });
    
    // 回车键搜索
    searchInput.addEventListener('keypress', (e) => {
      if (e.key === 'Enter') {
        searchButton.click();
      }
    });
  }
  
  // 测试关键词函数
  function testKeyword(keyword: string) {
    const searchInput = document.getElementById('searchInput') as HTMLInputElement;
    const searchButton = document.getElementById('searchButton') as HTMLButtonElement;
    if (searchInput && searchButton) {
      searchInput.value = keyword;
      searchButton.click();
    }
  }
  
  // 页面加载完成后初始化
  document.addEventListener('DOMContentLoaded', testSearch);
</script>
