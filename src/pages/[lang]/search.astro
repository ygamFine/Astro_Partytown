---
export const prerender = true;

import Layout from '@layouts/Layout.astro';
import Breadcrumb from '@components/templates/navigation/Breadcrumb.astro';
import PagefindSearch from '@components/templates/common/PagefindSearch.astro';
import { getDictionary } from '@i18n/dictionaries.js';
import { generateSearchBreadcrumbs } from '@utils/breadcrumbUtils.js';
import { themeConfig } from '@config/theme.js';

import { generateCommonStaticPaths } from '@utils/pageUtils'

// 使用 Astro 内置的 i18n 路由
export async function getStaticPaths() {
  return generateCommonStaticPaths();
}

const { lang } = Astro.params;
const searchQuery = '';
const t = await getDictionary(lang);
// 准备客户端使用的数据
const noResultsData = {
  noResultsText: t.search?.noResults || '没有找到结果',
  noResultsDescText: t.search?.noResultsDescription || '请尝试其他关键词'
};

// 面包屑导航
const breadcrumbs = generateSearchBreadcrumbs(lang, searchQuery);

// 获取页面宽度配置
const getPageWidth = () => {
  return themeConfig.layout.dynamicWidth.getPageWidth('search');
};

const pageWidth = getPageWidth();
---

<Layout title={t.search?.title || ''} description={t.search?.description || ''} lang={lang} pageType="search">
  <div class="min-h-screen bg-gray-50">
    <!-- 面包屑导航 -->
    <div class="bg-white border-b">
      <div class="mx-auto px-4 py-4" style={`max-width: ${pageWidth}`}>
        <Breadcrumb breadcrumbs={breadcrumbs} lang={lang} />
      </div>
    </div>
    
    <!-- 页面头部 -->
    <div class="bg-white shadow-sm">
      <div class="mx-auto px-4 sm:px-6 lg:px-8 py-8" style={`max-width: ${pageWidth}`}>
        <div class="text-center">
          <h1 class="text-3xl font-bold text-gray-900 mb-4">
            {t.search?.title || ''}
          </h1>
          <p class="text-lg text-gray-600 mb-8">
            {t.search?.description || ''}
          </p>
          
          <!-- Pagefind 搜索框 -->
          <div class="max-w-2xl mx-auto">
            <PagefindSearch lang={lang} showInfo={false} initialQuery={searchQuery} />
          </div>
        </div>
      </div>
    </div>

    <!-- 搜索结果区域 -->
    <div class="mx-auto px-4 sm:px-6 lg:px-8 py-8" style={`max-width: ${pageWidth}`}>
      <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
        <!-- 左侧分类导航 -->
        <div class="lg:col-span-1">
          <div class="bg-white rounded-lg shadow-sm p-6 sticky top-4">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">{t.search?.categoriesTitle || ''}</h3>
            
            <!-- 分类列表 -->
            <div class="space-y-3">
              <!-- 全部内容 -->
              <div class="search-category-item" data-category="all">
                <button class="w-full text-left px-4 py-3 rounded-lg border border-gray-200 hover:border-purple-300 hover:bg-purple-50 transition-all duration-200 flex items-center justify-between group search-category-active">
                  <div class="flex items-center space-x-3">
                    <div class="w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center group-hover:bg-purple-200 transition-colors">
                      <svg class="w-4 h-4 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                      </svg>
                    </div>
                    <span class="font-medium text-gray-900">{t.search?.categories?.all || ''}</span>
                  </div>
                  <span class="text-sm text-gray-500 bg-gray-100 px-2 py-1 rounded-full" id="total-count">0</span>
                </button>
              </div>
              <!-- 产品分类 -->
              <div class="search-category-item" data-category="product">
                <button class="w-full text-left px-4 py-3 rounded-lg border border-gray-200 hover:border-red-300 hover:bg-red-50 transition-all duration-200 flex items-center justify-between group">
                  <div class="flex items-center space-x-3">
                    <div class="w-8 h-8 bg-red-100 rounded-lg flex items-center justify-center group-hover:bg-red-200 transition-colors">
                      <svg class="w-4 h-4 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
                      </svg>
                    </div>
                    <span class="font-medium text-gray-900">{t.search?.categories?.product || ''}</span>
                  </div>
                  <span class="text-sm text-gray-500 bg-gray-100 px-2 py-1 rounded-full" id="product-count">0</span>
                </button>
              </div>

              <!-- 新闻分类 -->
              <div class="search-category-item" data-category="news">
                <button class="w-full text-left px-4 py-3 rounded-lg border border-gray-200 hover:border-blue-300 hover:bg-blue-50 transition-all duration-200 flex items-center justify-between group">
                  <div class="flex items-center space-x-3">
                    <div class="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center group-hover:bg-blue-200 transition-colors">
                      <svg class="w-4 h-4 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
                      </svg>
                    </div>
                    <span class="font-medium text-gray-900">{t.search?.categories?.news || ''}</span>
                  </div>
                  <span class="text-sm text-gray-500 bg-gray-100 px-2 py-1 rounded-full" id="news-count">0</span>
                </button>
              </div>

              <!-- 案例分类 -->
              <div class="search-category-item" data-category="case">
                <button class="w-full text-left px-4 py-3 rounded-lg border border-gray-200 hover:border-green-300 hover:bg-green-50 transition-all duration-200 flex items-center justify-between group">
                  <div class="flex items-center space-x-3">
                    <div class="w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center group-hover:bg-green-200 transition-colors">
                      <svg class="w-4 h-4 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                      </svg>
                    </div>
                    <span class="font-medium text-gray-900">{t.search?.categories?.case || ''}</span>
                  </div>
                  <span class="text-sm text-gray-500 bg-gray-100 px-2 py-1 rounded-full" id="case-count">0</span>
                </button>
              </div>
            </div>
          </div>
        </div>

        <!-- 右侧搜索结果 -->
        <div class="lg:col-span-3">
          <div id="pagefind-search-results" class="pagefind-results-wrapper">
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  // Pagefind 搜索页面初始化
  document.addEventListener('DOMContentLoaded', async function() {
    const resultsContainer = document.getElementById('pagefind-search-results') as HTMLElement | null;
    const urlParams = new URLSearchParams(window.location.search);
    const query = urlParams.get('q') || '';
    
    if (!resultsContainer) return;
    
    // 分类筛选功能
    let currentCategory = 'all';
    let allSearchResults: any[] = []; // 存储所有搜索结果
    const categoryButtons = document.querySelectorAll('.search-category-item button');
    
    // 辅助函数：从URL获取分类
    function getCategoryFromUrl(url: string) {
      if (url.includes('/products/')) return 'product';
      if (url.includes('/news/')) return 'news';
      if (url.includes('/case/')) return 'case';
      return 'other';
    }
    
    // 辅助函数：获取分类标签
    function getCategoryLabel(category: 'product' | 'news' | 'case' | 'other') {
      const labels = { product: '产品', news: '新闻', case: '案例', other: '其他' };
      return labels[category] || labels.other || '其他';
    }
    
        // 筛选并显示结果
    function filterAndDisplayResults() {
      if (!resultsContainer) return;
      
      // 获取当前所有搜索结果元素
      const allResultElements = resultsContainer.querySelectorAll('.pagefind-ui__result');
      
      if (allResultElements.length === 0) {
        return; // 如果没有结果，不进行筛选
      }
      
      // 筛选结果元素
      allResultElements.forEach((resultEl) => {
        const link = resultEl.querySelector('a');
        if (link) {
          const url = link.getAttribute('href') || '';
          const resultCategory = getCategoryFromUrl(url);
          
          // 根据当前分类显示或隐藏结果
          if (currentCategory === 'all' || resultCategory === currentCategory) {
            (resultEl as HTMLElement).style.display = 'block';
          } else {
            (resultEl as HTMLElement).style.display = 'none';
          }
        }
      });
      
      // 检查是否有可见的结果
      const visibleResults = resultsContainer.querySelectorAll('.pagefind-ui__result[style*="display: block"], .pagefind-ui__result:not([style*="display: none"])');
      
      if (visibleResults.length === 0 && allResultElements.length > 0) {
        // 显示无结果消息
        const noResultsEl = document.createElement('div');
        noResultsEl.className = 'no-results-message';
        noResultsEl.innerHTML = `
          <div class="text-center py-12">
            <svg class="w-16 h-16 text-gray-300 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.34 0-4.47-.881-6.08-2.33" />
            </svg>
            <h3 class="text-lg font-medium text-gray-900 mb-2">该分类下没有找到结果</h3>
            <p class="text-gray-600">请尝试其他分类或关键词</p>
          </div>
        `;
        
        // 移除之前的无结果消息
        const existingNoResults = resultsContainer.querySelector('.no-results-message');
        if (existingNoResults) {
          existingNoResults.remove();
        }
        
        resultsContainer.appendChild(noResultsEl);
      } else {
        // 移除无结果消息
        const existingNoResults = resultsContainer.querySelector('.no-results-message');
        if (existingNoResults) {
          existingNoResults.remove();
        }
      }
    }
    
    // 更新统计显示
    function updateStatistics() {
      const resultCounts: Record<'product' | 'news' | 'case', number> = { product: 0, news: 0, case: 0 };
      
      // 统计所有搜索结果
      allSearchResults.forEach(result => {
        const url = result.url || '';
        const category = getCategoryFromUrl(url);
        if (category === 'product' || category === 'news' || category === 'case') {
          resultCounts[category]++;
        }
      });
      
      const productCountEl = document.getElementById('product-count');
      const newsCountEl = document.getElementById('news-count');
      const caseCountEl = document.getElementById('case-count');
      const totalCountEl = document.getElementById('total-count');
      
      if (productCountEl) productCountEl.textContent = resultCounts.product.toString();
      if (newsCountEl) newsCountEl.textContent = resultCounts.news.toString();
      if (caseCountEl) caseCountEl.textContent = resultCounts.case.toString();
      if (totalCountEl) totalCountEl.textContent = (resultCounts.product + resultCounts.news + resultCounts.case).toString();
    }
    
    categoryButtons.forEach((button) => {
      button.addEventListener('click', function(this: HTMLElement) {
        const parent = this.closest('.search-category-item') as HTMLElement | null;
        const category = parent?.dataset.category as ('all' | 'product' | 'news' | 'case') | undefined;
        
        // 更新按钮状态
        categoryButtons.forEach(btn => {
          btn.classList.remove('search-category-active');
          btn.classList.remove('border-red-500', 'border-blue-500', 'border-green-500', 'border-purple-500');
          btn.classList.remove('bg-red-50', 'bg-blue-50', 'bg-green-50', 'bg-purple-50');
        });
        
        this.classList.add('search-category-active');
        
        // 根据分类设置颜色
        if (category === 'product') {
          this.classList.add('border-red-500', 'bg-red-50');
        } else if (category === 'news') {
          this.classList.add('border-blue-500', 'bg-blue-50');
        } else if (category === 'case') {
          this.classList.add('border-green-500', 'bg-green-50');
        } else if (category === 'all') {
          this.classList.add('border-purple-500', 'bg-purple-50');
        }
        
        currentCategory = category || 'all';
        
        // 重新筛选并显示结果
        filterAndDisplayResults();
        // 更新统计
        updateStatistics();
      });
    });
    
    // 尝试加载 Pagefind
    try {
      const { PagefindUI } = await import('@pagefind/default-ui');

      // 初始化 Pagefind UI
      const pagefind = new PagefindUI({
        element: resultsContainer,
        showImages: true,
        translations: {},
        processResult: (result) => {
          // 添加分类标签
          const url = result.url || '';
          const category = getCategoryFromUrl(url);
          const categoryLabel = getCategoryLabel(category);
          
          // 将结果添加到全局数组用于分类筛选
          allSearchResults.push(result);
          
          return {
            ...result,
            meta: {
              ...result.meta,
              category: categoryLabel
            }
          };
        }
      });
      
      // 保存实例到全局变量并广播 ready 事件，供其他组件复用
      (window as any).pagefindInstance = pagefind;
      window.dispatchEvent(new Event('pagefind:ready'));
      
      // 监听搜索事件，清空结果数组
      allSearchResults = [];
      
      // 监听搜索结果变化并更新统计
      let lastResultsLength = 0;
      const updateInterval = setInterval(() => {
        const currentResults = resultsContainer.querySelectorAll('.pagefind-ui__result');
        if (currentResults.length !== lastResultsLength) {
          lastResultsLength = currentResults.length;
          
          // 重新收集搜索结果数据
          allSearchResults = [];
          currentResults.forEach((resultEl) => {
            const link = resultEl.querySelector('a');
            if (link) {
              const url = link.getAttribute('href') || '';
              const titleEl = resultEl.querySelector('.pagefind-ui__result-title');
              const excerptEl = resultEl.querySelector('.pagefind-ui__result-excerpt');
              const imageEl = resultEl.querySelector('.pagefind-ui__result-image');
              
              const result = {
                url: url,
                title: titleEl?.textContent || '',
                excerpt: excerptEl?.textContent || '',
                image: imageEl?.getAttribute('src') || '',
                meta: {
                  title: titleEl?.textContent || '',
                  excerpt: excerptEl?.textContent || '',
                  image: imageEl?.getAttribute('src') || ''
                }
              };
              
              allSearchResults.push(result);
            }
          });
          
          // 重置所有结果的显示状态
          currentResults.forEach((resultEl) => {
            (resultEl as HTMLElement).style.display = 'block';
          });
          
          // 移除无结果消息
          if (resultsContainer) {
            const existingNoResults = resultsContainer.querySelector('.no-results-message');
            if (existingNoResults) {
              existingNoResults.remove();
            }
          }
          
          updateStatistics();
          
          // 如果当前有分类筛选，重新应用筛选
          if (currentCategory !== 'all') {
            filterAndDisplayResults();
          }
        }
      }, 500);
      
      // 清理定时器
      window.addEventListener('beforeunload', () => {
        clearInterval(updateInterval);
      });
      
      // 如果有初始查询，触发搜索
      if (query) {
        // 清空之前的结果
        allSearchResults = [];
        pagefind.triggerSearch(query);
      }
    } catch (error) {
      // 显示错误信息
      (resultsContainer as HTMLElement).innerHTML = `
        <div class="text-center py-12">
          <svg class="w-16 h-16 text-gray-300 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.34 0-4.47-.881-6.08-2.33" />
          </svg>
          <h3 class="text-lg font-medium text-gray-900 mb-2">搜索功能暂时不可用</h3>
          <p class="text-gray-600 mb-4">请稍后再试或联系管理员</p>
        </div>
      `;
    }
  });
</script>

<style>
  .pagefind-results-wrapper {
    min-height: 400px;
  }

  /* 分类按钮激活状态 */
  .search-category-active {
    border-color: #8b5cf6 !important;
    background-color: #faf5ff !important;
  }

  /* 搜索结果样式 - 使用官方 Pagefind UI */
  :global(.pagefind-ui__result-category) {
    background: #dc2626;
    color: white;
    padding: 0.2rem 0.5rem;
    border-radius: 4px;
    font-size: 0.7rem;
  }

  :global(.pagefind-ui__message) {
    text-align: center;
    padding: 2rem;
    color: #6b7280;
  }

  :global(.pagefind-ui__filters) {
    margin-bottom: 2rem;
  }

  :global(.pagefind-ui__filter) {
    background: #f3f4f6;
    border: 1px solid #e5e7eb;
    border-radius: 6px;
    padding: 0.5rem 1rem;
    margin-right: 0.5rem;
    margin-bottom: 0.5rem;
    font-size: 0.875rem;
    transition: all 0.2s ease;
  }

  :global(.pagefind-ui__filter:hover) {
    background: #dc2626;
    color: white;
    border-color: #dc2626;
  }

  :global(.pagefind-ui__filter--selected) {
    background: #dc2626;
    color: white;
    border-color: #dc2626;
  }

  /* 响应式设计 */
  @media (max-width: 1024px) {
    .sticky {
      position: static;
    }
    
    /* 移动端优化 */
    :global(.pagefind-ui__result-link) {
      flex-direction: column;
      gap: 0.75rem;
    }
    
    :global(.pagefind-ui__result-image) {
      width: 100%;
      height: 120px;
    }
  }
</style> 