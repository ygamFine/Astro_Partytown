---
export const prerender = true;

import Layout from '../../layouts/Layout.astro';
import GlobalSearch from '../../components/GlobalSearch.astro';
import { getEnabledLanguages } from '../../lib/i18n-config.js';
import { mergeTranslations } from '../../locales/i18n.js';
import { generateSearchBreadcrumbs } from '../../lib/breadcrumbUtils.js';

// 只为配置中启用的语言生成静态路径
export async function getStaticPaths() {
  const enabledLanguages = getEnabledLanguages();
  return enabledLanguages.map((lang) => ({
    params: { lang },
    props: { locale: lang },
  }));
}

const { lang } = Astro.params;
const searchQuery = Astro.url.searchParams.get('q') || '';
const translations = await mergeTranslations(lang, ['form', 'breadcrumb']);
const t = (translations as any).form || {};
const breadcrumbT = (translations as any).breadcrumb || {};

// 面包屑导航
const breadcrumbs = generateSearchBreadcrumbs(lang, searchQuery);
---

<Layout title="搜索" description="全站搜索功能" lang={lang}>
  <div class="min-h-screen bg-gray-50">
    <!-- 页面头部 -->
    <div class="bg-white shadow-sm">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div class="text-center">
          <h1 class="text-3xl font-bold text-gray-900 mb-4">
            {searchQuery ? `搜索: "${searchQuery}"` : '全站搜索'}
          </h1>
          <p class="text-lg text-gray-600 mb-8">
            搜索产品、新闻、案例等全站内容
          </p>
          
          <!-- 搜索框 -->
          <div class="max-w-2xl mx-auto">
            <GlobalSearch lang={lang} />
          </div>
        </div>
      </div>
    </div>

    <!-- 搜索结果区域 -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <div id="search-results-container">
        {searchQuery ? (
          <div class="text-center py-12">
            <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-red-600 mx-auto mb-4"></div>
            <p class="text-gray-600">正在搜索...</p>
          </div>
        ) : (
          <div class="text-center py-12">
            <svg class="w-16 h-16 text-gray-300 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg>
            <h3 class="text-lg font-medium text-gray-900 mb-2">开始搜索</h3>
            <p class="text-gray-600">在上方搜索框中输入关键词，搜索全站内容</p>
          </div>
        )}
      </div>
    </div>
  </div>
</Layout>

<script define:vars={{ searchQuery, lang }}>
  // 搜索页面功能
  async function initSearchPage() {
    const resultsContainer = document.getElementById('search-results-container');
    
    if (!searchQuery) {
      return;
    }
    
    try {
      const { performSearch } = await import('/src/lib/searchIndex.js');
      const results = await performSearch(searchQuery, lang);
      
      displaySearchResults(results, searchQuery);
    } catch (error) {
      console.error('Search error:', error);
      displaySearchError();
    }
  }
  
  function displaySearchResults(results, query) {
    const resultsContainer = document.getElementById('search-results-container');
    
    if (results.length === 0) {
      resultsContainer.innerHTML = `
        <div class="text-center py-12">
          <svg class="w-16 h-16 text-gray-300 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.34 0-4.47-.881-6.08-2.33" />
          </svg>
          <h3 class="text-lg font-medium text-gray-900 mb-2">未找到相关结果</h3>
          <p class="text-gray-600 mb-4">没有找到与 "${query}" 相关的内容</p>
          <div class="space-y-2 text-sm text-gray-500">
            <p>• 请检查关键词拼写是否正确</p>
            <p>• 尝试使用更简单的关键词</p>
            <p>• 尝试使用同义词或相关词汇</p>
          </div>
        </div>
      `;
      return;
    }
    
    // 按类型分组结果
    const groupedResults = {
      product: results.filter(r => r.type === 'product'),
      news: results.filter(r => r.type === 'news'),
      case: results.filter(r => r.type === 'case')
    };
    
    let html = `
      <div class="mb-6">
        <h2 class="text-xl font-semibold text-gray-900 mb-4">搜索结果 (${results.length})</h2>
        <p class="text-gray-600">找到 ${results.length} 个与 "${query}" 相关的结果</p>
      </div>
    `;
    
    // 显示产品结果
    if (groupedResults.product.length > 0) {
      html += `
        <div class="mb-8">
          <h3 class="text-lg font-medium text-gray-900 mb-4 flex items-center">
            <span class="inline-block w-3 h-3 bg-blue-500 rounded-full mr-2"></span>
            产品 (${groupedResults.product.length})
          </h3>
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            ${groupedResults.product.map(item => `
              <a href="${item.url}" class="block bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200">
                <div class="aspect-w-16 aspect-h-9 mb-4">
                  <img src="${item.image}" alt="${item.title || ''}" class="w-full h-48 object-cover rounded-t-lg" onerror="this.style.display='none'">
                </div>
                <div class="p-4">
                  <h4 class="font-medium text-gray-900 mb-2 line-clamp-2">${highlightText(item.title, query)}</h4>
                  <p class="text-sm text-gray-600 mb-3 line-clamp-2">${highlightText(item.excerpt, query)}</p>
                  <div class="flex items-center justify-between">
                    <span class="text-sm font-medium text-red-600">${item.price}</span>
                    <span class="text-xs bg-blue-100 text-blue-600 px-2 py-1 rounded">${item.category}</span>
                  </div>
                </div>
              </a>
            `).join('')}
          </div>
        </div>
      `;
    }
    
    // 显示新闻结果
    if (groupedResults.news.length > 0) {
      html += `
        <div class="mb-8">
          <h3 class="text-lg font-medium text-gray-900 mb-4 flex items-center">
            <span class="inline-block w-3 h-3 bg-green-500 rounded-full mr-2"></span>
            新闻 (${groupedResults.news.length})
          </h3>
          <div class="space-y-4">
            ${groupedResults.news.map(item => `
              <a href="${item.url}" class="block bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200 p-4">
                <div class="flex items-start space-x-4">
                  <img src="${item.image}" alt="${item.title || ''}" class="w-20 h-20 object-cover rounded" onerror="this.style.display='none'">
                  <div class="flex-1 min-w-0">
                    <h4 class="font-medium text-gray-900 mb-2 line-clamp-2">${highlightText(item.title, query)}</h4>
                    <p class="text-sm text-gray-600 mb-2 line-clamp-2">${highlightText(item.excerpt, query)}</p>
                    <div class="flex items-center space-x-4 text-xs text-gray-500">
                      <span>${formatDate(item.date)}</span>
                      <span class="bg-green-100 text-green-600 px-2 py-1 rounded">${item.category}</span>
                    </div>
                  </div>
                </div>
              </a>
            `).join('')}
          </div>
        </div>
      `;
    }
    
    // 显示案例结果
    if (groupedResults.case.length > 0) {
      html += `
        <div class="mb-8">
          <h3 class="text-lg font-medium text-gray-900 mb-4 flex items-center">
            <span class="inline-block w-3 h-3 bg-purple-500 rounded-full mr-2"></span>
            案例 (${groupedResults.case.length})
          </h3>
          <div class="space-y-4">
            ${groupedResults.case.map(item => `
              <a href="${item.url}" class="block bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200 p-4">
                <div class="flex items-start space-x-4">
                  <img src="${item.image}" alt="${item.title || ''}" class="w-20 h-20 object-cover rounded" onerror="this.style.display='none'">
                  <div class="flex-1 min-w-0">
                    <h4 class="font-medium text-gray-900 mb-2 line-clamp-2">${highlightText(item.title, query)}</h4>
                    <p class="text-sm text-gray-600 mb-2 line-clamp-2">${highlightText(item.excerpt, query)}</p>
                    <div class="flex items-center space-x-4 text-xs text-gray-500">
                      <span>${formatDate(item.date)}</span>
                      <span class="bg-purple-100 text-purple-600 px-2 py-1 rounded">${item.category}</span>
                    </div>
                  </div>
                </div>
              </a>
            `).join('')}
          </div>
        </div>
      `;
    }
    
    resultsContainer.innerHTML = html;
  }
  
  function displaySearchError() {
    const resultsContainer = document.getElementById('search-results-container');
    resultsContainer.innerHTML = `
      <div class="text-center py-12">
        <svg class="w-16 h-16 text-red-300 mx-auto mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z" />
        </svg>
        <h3 class="text-lg font-medium text-gray-900 mb-2">搜索出错</h3>
        <p class="text-gray-600">搜索过程中发生错误，请稍后重试</p>
      </div>
    `;
  }
  
  function highlightText(text, query) {
    if (!query || !text) return text;
    const regex = new RegExp(`(${query.replace(/[.*+?^${}()|[\]\\]/g, '\\$&')})`, 'gi');
    return text.replace(regex, '<mark class="bg-yellow-200 px-1 rounded">$1</mark>');
  }
  
  function formatDate(dateStr) {
    try {
      const date = new Date(dateStr);
      return date.toLocaleDateString('zh-CN');
    } catch {
      return dateStr;
    }
  }
  
  // 初始化搜索页面
  document.addEventListener('DOMContentLoaded', initSearchPage);
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  mark {
    @apply bg-yellow-200 px-1 rounded;
  }
</style> 