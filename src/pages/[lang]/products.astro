---
export const prerender = true;

import SecondaryPageLayout from '../../components/templates/layout/SecondaryPageLayout.astro';
import GridList from '../../components/templates/common/GridList.astro';
import Pagination from '../../components/templates/common/Pagination.astro';
import EmptyState from '../../components/templates/common/EmptyState.astro';
import { getProducts } from '../../lib/strapi.js';
import { getEnabledLanguages } from '../../lib/i18n-config.js';
import { loadImageMapping } from '../../lib/imageProcessor.js';
import { calculatePagination } from '../../lib/paginationUtils.js';
import { processProductData, loadTranslations, generateBreadcrumbs } from '../../lib/dataProcessor.js';

// 只为配置中启用的语言生成路由
export async function getStaticPaths() {
  const enabledLanguages = getEnabledLanguages();
  return enabledLanguages.map((lang) => ({
    params: { lang },
    props: { locale: lang },
  }));
}

const { lang } = Astro.params;

// 加载翻译文件
const translations = await loadTranslations(lang, ['pagination', 'common']) as any;

// 获取产品数据
const products = await getProducts(lang);

// 加载图片映射
const imageMapping = await loadImageMapping();

// 分页配置
const itemsPerPage = 9; // 每页显示9个产品（3行x3列）
const pagination = calculatePagination(products, itemsPerPage, 1);

// 处理产品数据
const gridItems = processProductData(pagination.displayItems, lang, imageMapping);

// 面包屑导航
const breadcrumbs = generateBreadcrumbs(lang, 'products').map(item => ({
  label: item.name,
  href: item.href
}));
---

<SecondaryPageLayout 
  title="Products"
  description="Explore our comprehensive range of construction machinery"
  breadcrumbs={breadcrumbs}
  currentSection="products"
  contentType="grid"
  lang={lang}
>
  {pagination.hasItems ? (
    <>
      <!-- 产品网格 -->
      <GridList 
        items={gridItems}
        itemsPerRow={3}
        maxRows={3}
        translations={translations}
      />
      
      <!-- 分页 -->
      <Pagination 
        currentPage={pagination.currentPage}
        totalPages={pagination.totalPages}
        baseUrl={`/${lang}/products`}
        i18n={translations.pagination}
      />
    </>
  ) : (
    <EmptyState 
      title="暂无产品数据"
      description="当前语言暂无产品信息，请稍后再试或切换其他语言。"
      icon="product"
      lang={lang}
    />
  )}
</SecondaryPageLayout> 