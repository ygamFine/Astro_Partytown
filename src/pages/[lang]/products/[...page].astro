---
export const prerender = true;

import SecondaryPageLayout from '@components/templates/layout/SecondaryPageLayout.astro';
import EnhancedGridList from '@components/templates/common/EnhancedGridList.astro';
import ViewToggle from '@components/templates/common/ViewToggle.astro';
import Pagination from '@components/templates/common/Pagination.astro';
import EmptyState from '@components/templates/common/EmptyState.astro';
import { generateCategoryBreadcrumbs } from '@utils/breadcrumbUtils.js';
import { getDictionary } from '@i18n/dictionaries.js';
import { generateUrl } from '@utils/tools.js';
import themeConfig from '@config/theme';
import StaticPaths, { type PageProps } from '@utils/StaticPaths';

// 生成静态路径
export async function getStaticPaths() {
  return await new StaticPaths().generateProductStaticPaths()
}

const { lang, category = { path: '', name: '' }, pages = { currentPage: 1, totalPages: 1, items: [] } } = Astro.props as PageProps;

// 分类数据
const { path, name } = category;
// 分页数据
const { currentPage, totalPages, items } = pages;
// 面包屑导航
const breadcrumbs = await generateCategoryBreadcrumbs(lang, 'products', path && name ? category: []);

const t = await getDictionary(lang);

---

<SecondaryPageLayout 
  title={name || t.product.title}
  breadcrumbs={breadcrumbs}
  currentSection="products"
  pageType="products"
  contentType="grid"
  lang={lang}
>
  {items && items.length > 0 ? (
    <>
      <!-- 视图切换控件 -->
      <ViewToggle 
        currentView="grid"
        translations={t.common}
        lang={lang}
        totalItems={items?.length || 0}
        showTotal={true}
      />
      
      <!-- 产品列表 -->
      <EnhancedGridList 
        items={items || []}
        itemsPerRow={3}
        maxRows={3}
        mode="products"
        translations={t.common}
        lang={lang}
        viewMode="grid"
      />

      {/* 列表描述内容 - 分页上方模式 */}
      {themeConfig.layout.listDescription.displayMode === 'above-pagination' && (
        <div class="mt-8 mb-6">
          <p class="text-lg text-gray-600 leading-relaxed">
            {/* TODO: 缺少描述字段 */}
          </p>
        </div>
      )}
      
      <!-- 分页控件 -->
      {totalPages && totalPages > 1 && (
        <Pagination
          currentPage={currentPage || 1}
          totalPages={totalPages}
          baseUrl={generateUrl(lang, '/products', path)}
          i18n={t.common}
        />
      )}
    </>
  ) : (
    <EmptyState 
      title={t.product.empty_state.no_products_title}
      description={t.product.empty_state.no_products_description}
      icon="product"
      lang={lang}
    />
  )}
</SecondaryPageLayout> 