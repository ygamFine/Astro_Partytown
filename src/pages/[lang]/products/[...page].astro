---
export const prerender = true;

import SecondaryPageLayout from '@components/templates/layout/SecondaryPageLayout.astro';
import EnhancedGridList from '@components/templates/common/EnhancedGridList.astro';
import ViewToggle from '@components/templates/common/ViewToggle.astro';
import Pagination from '@components/templates/common/Pagination.astro';
import EmptyState from '@components/templates/common/EmptyState.astro';
import { getProducts } from '@apis/common.js';
import { generatePaginationPaths, parsePageParam } from '@utils/paginationUtils.js';
import { generateProductListBreadcrumbs } from '@utils/breadcrumbUtils.js';
import { getDictionary } from '@i18n/dictionaries.js';
import { generateUrl } from '@utils/tools.js';

// 为分页生成静态路径，只为配置中启用的语言生成
export async function getStaticPaths() {
  const productsPerPage = 9; // 每页显示6个产品（2行x3列）
  return generatePaginationPaths(getProducts, productsPerPage, 'productPage');
}

const { lang, totalPages, items: gridItems } = Astro.props;

// 解析页码参数
const actualCurrentPage = parsePageParam(Astro.params.page, 'productPage');

const t = await getDictionary(lang);

// 面包屑导航
const breadcrumbs = generateProductListBreadcrumbs(lang)

// 生成分页基础URL
const baseUrl = generateUrl(lang, '/products');
---

<SecondaryPageLayout 
  title={t.product.title}
  breadcrumbs={breadcrumbs}
  currentSection="products"
  pageType="products"
  contentType="grid"
  lang={lang}
>
  {gridItems ? (
    <>
      <!-- 视图切换控件 -->
      <ViewToggle 
        currentView="grid"
        translations={t.common}
        lang={lang}
        totalItems={gridItems.length}
        showTotal={true}
      />
      
      <!-- 产品列表 -->
      <EnhancedGridList 
        items={gridItems}
        itemsPerRow={3}
        maxRows={3}
        mode="product"
        translations={t.common}
        lang={lang}
        viewMode="grid"
      />
      
      <!-- 分页 -->
      <Pagination 
        currentPage={actualCurrentPage}
        totalPages={totalPages}
        baseUrl={baseUrl}
        i18n={t.common}
      />
    </>
  ) : (
    <EmptyState 
      title={t.product.empty_state.no_products_title}
      description={t.product.empty_state.no_products_description}
      icon="product"
      lang={lang}
    />
  )}
</SecondaryPageLayout> 