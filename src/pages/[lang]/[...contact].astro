---
export const prerender = true;

import SecondaryPageLayout from "@components/templates/layout/SecondaryPageLayout.astro";
import { getDictionary } from "@i18n/dictionaries";
import { generateContactBreadcrumbs } from "@utils/breadcrumbUtils";
import { getContact } from "@apis/common";
import RichText from "@components/common/layout/RichText.astro";
import InquiryForm from "@components/common/italkin/InquiryForm";
import { getItalkinForm, getCompaniesSite } from "@apis/common";
import StaticPaths, { type PageProps } from "@utils/StaticPaths";

// 使用 Astro 内置的 i18n 路由
export async function getStaticPaths() {
  return await new StaticPaths().generateContactStaticPaths();
}

const { lang, pages = { item: {} } } = Astro.props as PageProps;
const { title } = pages.item;
const t = await getDictionary(lang);
const contactData = await getContact(lang);
const contact = contactData || {};

const companiesResp = await getCompaniesSite(lang);
const companyId = companiesResp?.company?.hz_company_id ?? "";
const siteId = companiesResp?.website?.hz_website_id ?? "";

const formResp = await getItalkinForm(companyId, siteId);
const formStructure = formResp?.data?.formStructure || [];
const formTrans = formResp?.data?.formTrans || [];

// 面包屑导航
const breadcrumbs = generateContactBreadcrumbs(lang);
---

<SecondaryPageLayout
  title={contact?.title || t?.contact?.page_title}
  breadcrumbs={breadcrumbs}
  currentSection="contact"
  contentType="content"
  lang={lang}
  pageType="contact"
  hideSidebar={title === "contact" ? true : false}
>
  {
    title === "contact" && (
      <div class="grid grid-cols-1 gap-8">
        <RichText lang={lang} content={contact?.details} />
        <div class="bg-white rounded-lg p-8 shadow-sm">
          <InquiryForm
            client:idle
            id="contact-page-form"
            lang={lang}
            transitions={t}
            showTitle={true}
            showDescription={true}
            successMode="toast"
            companyId={companyId}
            formId={formResp?.data?.formStructure?.[0]?.formId}
            formStructure={formStructure}
            formTrans={formTrans}
          />
        </div>
      </div>
    )
  }
  {
    title === "success" && (
      <div class="success-page-container flex items-center justify-center bg-gray-50 py-12 px-4 min-h-[50vh]">
        <div class="max-w-md w-full space-y-8 text-center">
          <div class="mx-auto flex items-center justify-center h-24 w-24 rounded-full bg-green-100">
            <svg
              class="h-12 w-12 text-green-600"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M5 13l4 4L19 7"
              />
            </svg>
          </div>
          <div>
            <h2 class="mt-6 text-3xl font-extrabold text-gray-900">
              {t.form?.messages?.submit_success_toast_text}
            </h2>
            <p class="mt-2 text-sm text-gray-600">
              {t.form?.messages?.submit_success_toast_subtitle}
            </p>
          </div>
          <div class="mt-8 space-y-4">
            <button
              type="button"
              id="success-page-return-btn"
              class="w-full py-3 px-4 bg-red-600 hover:bg-red-700 text-white font-medium rounded-md transition-colors duration-200"
              onclick="window.location.href='/'"
            >
              {t.form?.messages?.submit_success_toast_button}
            </button>
          </div>
        </div>
      </div>
    )
  }
</SecondaryPageLayout>
