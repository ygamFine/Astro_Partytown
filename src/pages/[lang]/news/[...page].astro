---
export const prerender = true;

import SecondaryPageLayout from '../../../components/templates/SecondaryPageLayout.astro';
import NewsList from '../../../components/templates/NewsList.astro';
import Pagination from '../../../components/templates/Pagination.astro';
import { getNews } from '../../../lib/newsService.js';
import { getEnabledLanguages } from '../../../lib/i18n-config.js';
import { generateNewsBreadcrumbs } from '../../../lib/breadcrumbUtils.js';

// 为分页生成静态路径，只为配置中启用的语言生成
export async function getStaticPaths() {
  const newsPerPage = 6; // 每页显示的新闻数量
  const enabledLanguages = getEnabledLanguages();
  
  // 生成分页路径
  const paths = [];
  
  // 为每种启用的语言生成路径
  for (const lang of enabledLanguages) {
    const news = await getNews(lang);
    const totalPages = Math.ceil(news.length / newsPerPage);
    
    // 只有当有新闻数据时才生成页面
    if (news.length > 0) {
      // 第一页 (可以用 /[lang]/news 或 /[lang]/news/1 访问)
      paths.push({
        params: { lang, page: undefined },
        props: { 
          lang,
          currentPage: 1,
          totalPages,
          news: news.slice(0, newsPerPage)
        }
      });
      
      // 其他页面
      for (let i = 2; i <= totalPages; i++) {
        paths.push({
          params: { lang, page: i.toString() },
          props: {
            lang,
            currentPage: i,
            totalPages,
            news: news.slice((i - 1) * newsPerPage, i * newsPerPage)
          }
        });
      }
    }
  }
  
  return paths;
}

const { lang, currentPage, totalPages, news } = Astro.props;
// 动态加载对应语言的翻译文件
let t;
let paginationT;
try {
  t = await import(`../../../locales/${lang}/news.json`);
  paginationT = await import(`../../../locales/${lang}/pagination.json`);
} catch (error) {
  // 如果加载失败，使用英文作为默认
  t = await import(`../../../locales/en/news.json`);
  paginationT = await import(`../../../locales/en/pagination.json`);
}

// 检查是否有新闻数据
const hasNews = news && news.length > 0;

// 处理新闻图片，确保是本地路径
const processNewsImage = (imageData: any): string | null => {
  if (!imageData) return null;
  
  if (typeof imageData === 'string') {
    // 如果是外部URL，返回null
    if (imageData.startsWith('http')) {
      return null;
    }
    // 如果是本地路径且格式正确，返回原路径
    if (imageData.match(/\.(jpe?g|png|webp|gif|svg|avif|tiff?)$/i)) {
      return imageData;
    }
  }
  
  return null;
};

// 按日期倒序排序新闻并转换数据格式
const sortedNews = hasNews ? news.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime()) : [];
const newsItems = sortedNews.map(newsItem => ({
  id: newsItem.id,
  title: newsItem.title,
  image: processNewsImage(newsItem.image),
  excerpt: newsItem.excerpt,
  date: newsItem.date,
  href: `/${lang}/news/${newsItem.slug}`,
}));

// 面包屑导航
const breadcrumbs = generateNewsBreadcrumbs(lang, currentPage > 1 ? currentPage : undefined);
---

<SecondaryPageLayout 
  title={t.default.news.title}
  description={t.default.news.description}
  breadcrumbs={breadcrumbs}
  currentSection="news"
  contentType="list"
  lang={lang}
>
  {hasNews ? (
    <>
      <!-- 新闻列表 -->
      <NewsList 
        items={newsItems}
        lang={lang}
        t={t.default}
      />
      
      <!-- 分页 -->
      <Pagination 
        currentPage={currentPage}
        totalPages={totalPages}
        baseUrl={`/${lang}/news`}
        i18n={paginationT.default}
      />
    </>
  ) : (
    <!-- 空状态 -->
    <div class="empty-state">
      <div class="empty-state-content">
        <div class="empty-state-icon">
          <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
            <path d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </div>
        <h3 class="empty-state-title">暂无新闻数据</h3>
        <p class="empty-state-description">当前语言暂无新闻信息，请稍后再试或切换其他语言。</p>
        <div class="empty-state-actions">
          <button class="empty-state-button secondary" onclick={`window.location.href='/${lang}/'`}>
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"/>
              <polyline points="9,22 9,12 15,12 15,22"/>
            </svg>
            返回首页
          </button>
        </div>
      </div>
    </div>
  )}
</SecondaryPageLayout> 