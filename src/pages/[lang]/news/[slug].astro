---
export const prerender = true;
import Layout from '../../../layouts/Layout.astro';
import Breadcrumb from '../../../components/templates/navigation/Breadcrumb.astro';
import GridList from '../../../components/templates/common/GridList.astro';
import { getNews, getNewsById } from '../../../lib/strapi.js';
import { getProducts } from '../../../lib/strapi.js';
import { getEnabledLanguages } from '../../../lib/i18n-config.js';
import { generateNewsDetailBreadcrumbs } from '../../../lib/breadcrumbUtils.js';
import { loadImageMapping, processImageForDisplay } from '../../../lib/imageProcessor.js';

export async function getStaticPaths() {
  const enabledLanguages = getEnabledLanguages();
  let paths: any[] = [];

  // 为每种启用的语言生成路径
  for (const lang of enabledLanguages) {
    const news = await getNews(lang);
    
    // 只有当有新闻数据时才生成页面
    if (news && news.length > 0) {
      // 按日期降序排序新闻
      const sortedNews = news.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());
      
      sortedNews.forEach((item, index) => {
        const previousNews = index > 0 ? sortedNews[index - 1] : null;
        const nextNews = index < sortedNews.length - 1 ? sortedNews[index + 1] : null;

        paths.push({
          params: { lang, slug: item.slug || item.id },
          props: { lang, news: item, previousNews, nextNews }
        });
      });
    }
  }

  return paths;
}

const { lang, news, previousNews, nextNews } = Astro.props;

// 检查是否有新闻数据
const hasNews = news !== null;

// 动态加载对应语言的翻译文件
let t;
let commonT;
try {
  t = await import(`../../../locales/${lang}/news.json`);
  commonT = await import(`../../../locales/${lang}/common.json`);
} catch (error) {
  // 如果加载失败，使用英文作为默认
  t = await import(`../../../locales/en/news.json`);
  commonT = await import(`../../../locales/en/common.json`);
}

// 获取3个相关产品（随机）
const products = await getProducts(lang);
const shuffledProducts = products.sort(() => 0.5 - Math.random());
const relatedProducts = shuffledProducts.slice(0, 3);

// 过滤有效的相关产品图片
const validRelatedProducts = relatedProducts.filter(product => {
  if (!product.image) return false;
  if (typeof product.image === 'string') {
    return product.image.match(/\.(jpe?g|png|webp|gif|svg|avif|tiff?)$/i);
  }
  return true; // 如果是导入的图片对象，认为是有效的
});

// 获取相关新闻 (最新的4篇，排除当前文章) -> 用于主内容区底部
const allNews = await getNews(lang);
const relatedNews = allNews
  .filter(item => item.slug !== news.slug)
  .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())
  .slice(0, 4);

// 获取热门文章 (最新的5篇，排除当前文章) -> 用于右侧边栏
const popularArticles = allNews
  .filter(item => item.slug !== news.slug)
  .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())
  .slice(0, 5);

const breadcrumbs = hasNews ? generateNewsDetailBreadcrumbs(lang, news.title) : [];

const formatDate = (dateString: string) => {
  if (!dateString) return '';
  const date = new Date(dateString);
  return `${date.getFullYear()}/${(date.getMonth() + 1).toString().padStart(2, '0')}/${date.getDate().toString().padStart(2, '0')}`;
};

// 加载图片映射
const imageMapping = await loadImageMapping();

const validNewsImage = hasNews ? processImageForDisplay(news.image, imageMapping) : null;
---

<Layout title={hasNews ? news.title : '新闻详情'} description={hasNews ? news.excerpt : ''} lang={lang}>
  <main class="bg-gray-50 min-h-screen">
    {hasNews ? (
      <>
        <!-- Breadcrumb -->
        <div class="bg-white border-b">
          <div class="container mx-auto px-4 py-4">
            <Breadcrumb breadcrumbs={breadcrumbs} lang={lang} />
          </div>
        </div>
        
        <!-- Main Content Section -->
        <div class="container mx-auto px-4 py-8">
            <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
                <!-- 中间主内容区 -->
                <div class="lg:col-span-3">
                  <div class="bg-white rounded-lg shadow-lg p-8 mb-8">
                    <article>
        <!-- Article Header -->
                        <header class="mb-8">
                          <h1 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4 leading-tight">{news.title}</h1>
                          <time datetime={news.date} class="text-sm text-gray-500 block">{formatDate(news.date)}</time>
        </header>

        <!-- Article Image -->
                        {validNewsImage && (
        <div class="mb-8">
                <img 
            src={validNewsImage} 
            alt={news.title || ''} 
            width="800"
            height="500"
                            class="w-full h-auto max-h-[500px] object-cover rounded-lg"
                            loading="eager"
            decoding="async"
          />
        </div>
                        )}

        <!-- Article Content -->
                        <div class="prose max-w-none" set:html={news.content} />
                    </article>
                  </div>

              <!-- Previous/Next 导航 -->
              <div class="bg-white rounded-lg p-6 shadow-sm mb-8">
                <div class="flex justify-between items-center">
                    <div class="flex-1">
                        {previousNews && (
                        <a href={`/${lang}/news/${previousNews.slug}`} class="flex items-center text-gray-600 hover:text-red-600 group">
                            <svg class="w-5 h-5 mr-2 group-hover:-translate-x-1 transition-transform" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                            </svg>
                            <div>
                            <div class="text-sm">{t.default.navigation.previous_article}</div>
                            <div class="font-medium line-clamp-1">{previousNews.title}</div>
                            </div>
                        </a>
                        )}
                    </div>
                    <div class="flex-1 text-right">
                        {nextNews && (
                        <a href={`/${lang}/news/${nextNews.slug}`} class="flex items-center justify-end text-gray-600 hover:text-red-600 group">
                            <div class="text-right">
                            <div class="text-sm">{t.default.navigation.next_article}</div>
                            <div class="font-medium line-clamp-1">{nextNews.title}</div>
                            </div>
                            <svg class="w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
                            </svg>
                        </a>
                        )}
                    </div>
                </div>
            </div>

              <!-- Related Products -->
              <div class="bg-white rounded-lg p-8 shadow-sm mb-8">
                  <h2 class="text-xl font-bold text-gray-900 mb-6 flex items-center">
                    <div class="w-1 h-6 bg-red-600 mr-3"></div>
                    {t.default.related.products}
                  </h2>
                  <GridList 
                      items={validRelatedProducts.map(p => ({
                          id: p.id,
                          title: p.name, // 使用 name 字段作为 title
                          image: p.image,
                          excerpt: p.excerpt,
                          href: `/${lang}/products/${p.slug}`
                      }))}
                      itemsPerRow={3}
                      translations={{ common: commonT.default }}
                      lang={lang}
                  />
              </div>

              <!-- Related News -->
              <div class="bg-white rounded-lg p-8 shadow-sm mb-8">
                <h2 class="text-xl font-bold text-gray-900 mb-6 flex items-center">
                  <div class="w-1 h-6 bg-red-600 mr-3"></div>
                  {t.default.related.news}
                </h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-x-8 gap-y-4">
                  {relatedNews.map((newsItem) => (
                    <div class="flex items-start space-x-4">
                      <div class="flex-1">
                        <a href={`/${lang}/news/${newsItem.slug}`} class="block">
                          <h3 class="font-medium text-gray-900 mb-2 hover:text-red-600 transition-colors line-clamp-2">
                            {newsItem.title}
                          </h3>
                        </a>
                        <div class="text-sm text-gray-500">
                          {formatDate(newsItem.date)}
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
            </div>
            </div>

            <!-- 右侧热门文章 -->
            <aside class="lg:col-span-1 space-y-8">
              <!-- Popular Articles -->
              <div class="bg-white p-6 rounded-lg shadow-sm">
                <h3 class="text-xl font-bold text-gray-900 mb-6 flex items-center">
                  <div class="w-1 h-6 bg-blue-600 mr-3"></div>
                  {t.default.sidebar.popular_articles}
                </h3>
                <ul class="space-y-4">
                  {popularArticles.map(article => (
                    <li>
                      <a href={`/${lang}/news/${article.slug}`} class="font-medium text-gray-800 hover:text-blue-600 transition-colors duration-200 ease-in-out line-clamp-2">
                        {article.title}
                      </a>
                    </li>
                  ))}
                </ul>
              </div>
            </aside>
        </div>
    </div>
      </>
    ) : (
      <!-- 空状态 -->
      <div class="empty-state">
        <div class="empty-state-content">
          <div class="empty-state-icon">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
              <path d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
          </div>
          <h3 class="empty-state-title">暂无新闻数据</h3>
          <p class="empty-state-description">当前语言暂无新闻信息，请稍后再试或切换其他语言。</p>
          <div class="empty-state-actions">
            <button class="empty-state-button secondary" onclick={`window.location.href='/${lang}/'`}>
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"/>
                <polyline points="9,22 9,12 15,12 15,22"/>
              </svg>
              返回首页
            </button>
          </div>
        </div>
      </div>
    )}
  </main>
</Layout>

<style is:global>
  .prose {
    @apply text-gray-800 leading-relaxed;
  }
  .prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
    @apply text-gray-900 font-bold;
  }
  .prose a {
    @apply text-blue-600 hover:underline;
  }
  .prose p {
    @apply my-4;
  }
  .prose ul, .prose ol {
    @apply my-4 pl-6;
  }
  .prose li {
    @apply mb-2;
  }
  .line-clamp-1 {
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style> 