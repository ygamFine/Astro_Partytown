---
export const prerender = true;
import Layout from '../../../layouts/Layout.astro';
import Breadcrumb from '../../../components/templates/Breadcrumb.astro';
import GridList from '../../../components/templates/GridList.astro';
import { allNews } from '../../../data/news.js';
import { products } from '../../../data/products.js';
import { SUPPORTED_LANGUAGES } from '../../../locales/i18n.js';
import { generateNewsDetailBreadcrumbs } from '../../../lib/breadcrumbUtils.js';

export function getStaticPaths() {
  // 按日期降序排序所有新闻
  const sortedNews = allNews.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());

  return SUPPORTED_LANGUAGES.flatMap(lang =>
    sortedNews.map((news, index) => {
      const previousNews = index > 0 ? sortedNews[index - 1] : null;
      const nextNews = index < sortedNews.length - 1 ? sortedNews[index + 1] : null;

      return {
        params: { lang, slug: news.slug },
        props: { lang, news, previousNews, nextNews }
      };
    })
  );
}

const { lang, news, previousNews, nextNews } = Astro.props;

// 动态加载对应语言的翻译文件
let t;
try {
  t = await import(`../../../locales/${lang}/news.json`);
} catch (error) {
  // 如果加载失败，使用英文作为默认
  t = await import(`../../../locales/en/news.json`);
}

// 获取3个相关产品（随机）
const shuffledProducts = products.sort(() => 0.5 - Math.random());
const relatedProducts = shuffledProducts.slice(0, 3);

// 获取相关新闻 (最新的4篇，排除当前文章) -> 用于主内容区底部
const relatedNews = allNews
  .filter(item => item.slug !== news.slug)
  .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())
  .slice(0, 4);

// 获取热门文章 (最新的5篇，排除当前文章) -> 用于右侧边栏
const popularArticles = allNews
  .filter(item => item.slug !== news.slug)
  .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())
  .slice(0, 5);

const breadcrumbs = generateNewsDetailBreadcrumbs(lang, news.title);

const formatDate = (dateString: string) => {
  if (!dateString) return '';
  const date = new Date(dateString);
  return `${date.getFullYear()}/${(date.getMonth() + 1).toString().padStart(2, '0')}/${date.getDate().toString().padStart(2, '0')}`;
};
---

<Layout title={news.title} description={news.excerpt} lang={lang}>
  <main class="bg-gray-50 min-h-screen">
    <!-- Breadcrumb -->
    <div class="bg-white border-b">
      <div class="container mx-auto px-4 py-4">
        <Breadcrumb breadcrumbs={breadcrumbs} lang={lang} />
      </div>
    </div>
    
    <!-- Main Content Section -->
    <div class="container mx-auto px-4 py-8">
        <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
            <!-- 中间主内容区 -->
            <div class="lg:col-span-3">
              <div class="bg-white rounded-lg shadow-lg p-8 mb-8">
                <article>
    <!-- Article Header -->
                    <header class="mb-8">
                      <h1 class="text-3xl md:text-4xl font-bold text-gray-900 mb-4 leading-tight">{news.title}</h1>
                      <time datetime={news.date} class="text-sm text-gray-500 block">{formatDate(news.date)}</time>
    </header>

    <!-- Article Image -->
                    {news.image && (
    <div class="mb-8">
      <img 
        src={news.image} 
        alt={news.title} 
                        class="w-full h-auto max-h-[500px] object-cover rounded-lg"
                        loading="eager"
        decoding="async"
      >
    </div>
                    )}

    <!-- Article Content -->
                    <div class="prose max-w-none" set:html={news.content} />
                </article>
              </div>

              <!-- Previous/Next 导航 -->
              <div class="bg-white rounded-lg p-6 shadow-sm mb-8">
                <div class="flex justify-between items-center">
                    <div class="flex-1">
                        {previousNews && (
                        <a href={`/${lang}/news/${previousNews.slug}`} class="flex items-center text-gray-600 hover:text-red-600 group">
                            <svg class="w-5 h-5 mr-2 group-hover:-translate-x-1 transition-transform" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                            </svg>
                            <div>
                            <div class="text-sm">{t.default.navigation.previous_article}</div>
                            <div class="font-medium line-clamp-1">{previousNews.title}</div>
                            </div>
                        </a>
                        )}
                    </div>
                    <div class="flex-1 text-right">
                        {nextNews && (
                        <a href={`/${lang}/news/${nextNews.slug}`} class="flex items-center justify-end text-gray-600 hover:text-red-600 group">
                            <div class="text-right">
                            <div class="text-sm">{t.default.navigation.next_article}</div>
                            <div class="font-medium line-clamp-1">{nextNews.title}</div>
                            </div>
                            <svg class="w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
                            </svg>
                        </a>
                        )}
                    </div>
                </div>
            </div>

              <!-- Related Products -->
              <div class="bg-white rounded-lg p-8 shadow-sm mb-8">
                  <h2 class="text-xl font-bold text-gray-900 mb-6 flex items-center">
                    <div class="w-1 h-6 bg-red-600 mr-3"></div>
                    {t.default.related.products}
                  </h2>
                  <GridList 
                      items={relatedProducts.map(p => ({
                          id: p.id,
                          title: p.name, // 使用 name 字段作为 title
                          image: p.image,
                          excerpt: p.excerpt,
                          href: `/${lang}/products/${p.slug}`
                      }))}
                      itemsPerRow={3}
                  />
              </div>

              <!-- Related News -->
              <div class="bg-white rounded-lg p-8 shadow-sm mb-8">
                <h2 class="text-xl font-bold text-gray-900 mb-6 flex items-center">
                  <div class="w-1 h-6 bg-red-600 mr-3"></div>
                  {t.default.related.news}
                </h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-x-8 gap-y-4">
                  {relatedNews.map((newsItem) => (
                    <div class="flex items-start space-x-4">
                      <div class="flex-1">
                        <a href={`/${lang}/news/${newsItem.slug}`} class="block">
                          <h3 class="font-medium text-gray-900 mb-2 hover:text-red-600 transition-colors line-clamp-2">
                            {newsItem.title}
                          </h3>
                        </a>
                        <div class="text-sm text-gray-500">
                          {formatDate(newsItem.date)}
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
            </div>
            </div>

            <!-- 右侧热门文章 -->
            <aside class="lg:col-span-1 space-y-8">
              <!-- Popular Articles -->
              <div class="bg-white p-6 rounded-lg shadow-sm">
                <h3 class="text-xl font-bold text-gray-900 mb-6 flex items-center">
                  <div class="w-1 h-6 bg-blue-600 mr-3"></div>
                  {t.default.sidebar.popular_articles}
                </h3>
                <ul class="space-y-4">
                  {popularArticles.map(article => (
                    <li>
                      <a href={`/${lang}/news/${article.slug}`} class="font-medium text-gray-800 hover:text-blue-600 transition-colors duration-200 ease-in-out line-clamp-2">
                        {article.title}
                      </a>
                    </li>
                  ))}
                </ul>
              </div>
            </aside>
        </div>
    </div>
  </main>
</Layout>

<style is:global>
  .prose {
    @apply text-gray-800 leading-relaxed;
  }
  .prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
    @apply text-gray-900 font-bold;
  }
  .prose a {
    @apply text-blue-600 hover:underline;
  }
  .prose p {
    @apply my-4;
  }
  .prose ul, .prose ol {
    @apply my-4 pl-6;
  }
  .prose li {
    @apply mb-2;
  }
  .line-clamp-1 {
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style> 