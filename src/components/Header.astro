---
const navLinks = [
  { name: "首页", href: "/" },
  { name: "产品中心", href: "/products" },
  { name: "新闻中心", href: "/news" },
  { name: "关于我们", href: "/about" },
  { name: "联系我们", href: "/contact" },
];
---
<header class="bg-white/95 backdrop-blur-sm sticky top-0 z-50 shadow-md">
  <div class="container mx-auto px-4">
    <div class="flex items-center justify-between h-20">
      <!-- Logo -->
      <a href="/" class="flex items-center space-x-2 animate-float">
        <img src="/favicon.svg" alt="Yonan Logo" class="h-10 w-10">
        <span class="text-2xl font-bold text-gray-800">永安重工</span>
      </a>

      <!-- Desktop Navigation -->
      <nav aria-label="主要导航" class="hidden md:flex items-center space-x-8">
        {navLinks.map((link, index) => (
          <a href={link.href} 
             class="text-gray-600 hover:text-red-600 font-semibold transition-colors duration-300 focus-visible-ring"
             style={`animation-delay: ${100 * (index + 1)}ms;`}>
            {link.name}
          </a>
        ))}
        <a href="/contact" class="bg-red-600 text-white px-5 py-2 rounded-lg font-bold hover:bg-red-700 transition-colors duration-300 focus-visible-ring animate-slide-in-right" style="animation-delay: 600ms;">
          获取报价
        </a>
      </nav>

      <!-- Mobile Menu Button -->
      <div class="md:hidden">
        <button id="mobile-menu-button" class="p-2 text-gray-800 hover:text-red-600 focus:outline-none focus-visible-ring rounded-md" aria-label="主菜单" aria-expanded="false" aria-controls="mobile-menu">
          <svg id="menu-open-icon" class="h-8 w-8" stroke="currentColor" fill="none" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
          <svg id="menu-close-icon" class="h-8 w-8 hidden" stroke="currentColor" fill="none" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile Navigation Menu -->
  <div id="mobile-menu" class="hidden md:hidden bg-white border-t border-gray-200 shadow-lg">
    <nav aria-label="移动端导航" class="px-4 pt-2 pb-4 space-y-1">
      {navLinks.map(link => (
        <a href={link.href} class="block text-gray-700 hover:bg-red-50 hover:text-red-600 rounded-lg px-4 py-3 font-semibold transition-all duration-300 focus-visible-ring touch-manipulation">
          {link.name}
        </a>
      ))}
      <a href="/contact" class="block w-full text-center bg-red-600 text-white mt-4 px-5 py-3 rounded-lg font-bold hover:bg-red-700 transition-all duration-300 focus-visible-ring touch-manipulation">
        获取报价
      </a>
    </nav>
  </div>
</header>

<script>
  // 移动端菜单交互功能
  function initMobileMenu() {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const openIcon = document.getElementById('menu-open-icon');
    const closeIcon = document.getElementById('menu-close-icon');
    
    console.log('初始化移动端菜单...', { mobileMenuButton, mobileMenu, openIcon, closeIcon });
    
    if (mobileMenuButton && mobileMenu) {
      // 菜单按钮点击事件
      mobileMenuButton.addEventListener('click', (e) => {
        e.preventDefault();
        e.stopPropagation();
        
        const isHidden = mobileMenu.classList.contains('hidden');
        
        if (isHidden) {
          // 显示菜单
          mobileMenu.classList.remove('hidden');
          mobileMenuButton.setAttribute('aria-expanded', 'true');
        } else {
          // 隐藏菜单
          mobileMenu.classList.add('hidden');
          mobileMenuButton.setAttribute('aria-expanded', 'false');
        }
        
        // 切换图标显示
        if (openIcon && closeIcon) {
          if (isHidden) {
            openIcon.classList.add('hidden');
            closeIcon.classList.remove('hidden');
          } else {
            openIcon.classList.remove('hidden');
            closeIcon.classList.add('hidden');
          }
        }
        
        console.log('菜单状态切换:', { isHidden, newState: !isHidden });
      });
      
      // 点击菜单链接时关闭菜单
      const mobileLinks = mobileMenu.querySelectorAll('a');
      mobileLinks.forEach(link => {
        link.addEventListener('click', () => {
          mobileMenu.classList.add('hidden');
          mobileMenuButton.setAttribute('aria-expanded', 'false');
          if (openIcon && closeIcon) {
            openIcon.classList.remove('hidden');
            closeIcon.classList.add('hidden');
          }
        });
      });
      
      // 点击外部区域关闭菜单
      document.addEventListener('click', (e) => {
        const target = e.target as Node;
        if (target && !mobileMenuButton.contains(target) && !mobileMenu.contains(target)) {
          mobileMenu.classList.add('hidden');
          mobileMenuButton.setAttribute('aria-expanded', 'false');
          if (openIcon && closeIcon) {
            openIcon.classList.remove('hidden');
            closeIcon.classList.add('hidden');
          }
        }
      });
      
      console.log('移动端菜单初始化完成');
    } else {
      console.error('移动端菜单元素未找到');
    }
  }

  // 确保DOM加载完成后初始化
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initMobileMenu);
  } else {
    initMobileMenu();
  }
</script> 