---
export interface Props {
  title: string;
  description: string;
  icon?: string;
  actions?: Array<{
    label: string;
    href: string;
    variant?: 'primary' | 'secondary';
    icon?: string;
  }>;
  lang: string;
}

const { title, description, icon = 'default', actions = [], lang } = Astro.props;

// 默认图标
const defaultIcons = {
  default: `<svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
    <path d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M12 12l8-4" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M12 12v10" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M12 12L4 8" stroke-linecap="round" stroke-linejoin="round"/>
  </svg>`,
  news: `<svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
    <path d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" stroke-linecap="round" stroke-linejoin="round"/>
  </svg>`,
  case: `<svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
    <path d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" stroke-linecap="round" stroke-linejoin="round"/>
  </svg>`,
  product: `<svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
    <path d="M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M12 12l8-4" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M12 12v10" stroke-linecap="round" stroke-linejoin="round"/>
    <path d="M12 12L4 8" stroke-linecap="round" stroke-linejoin="round"/>
  </svg>`
};

const selectedIcon = defaultIcons[icon as keyof typeof defaultIcons] || defaultIcons.default;

// 默认操作按钮
const defaultActions = actions.length > 0 ? actions : [{
  label: '返回首页',
  href: `/${lang}/`,
  variant: 'secondary',
  icon: `<svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
    <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"/>
    <polyline points="9,22 9,12 15,12 15,22"/>
  </svg>`
}];
---

<div class="empty-state">
  <div class="empty-state-content">
    <div class="empty-state-icon" set:html={selectedIcon}></div>
    <h3 class="empty-state-title">{title}</h3>
    <p class="empty-state-description">{description}</p>
    {defaultActions.length > 0 && (
      <div class="empty-state-actions">
        {defaultActions.map(action => (
          <a 
            href={action.href}
            class={`empty-state-button ${action.variant || 'secondary'}`}
          >
            {action.icon && <span set:html={action.icon}></span>}
            {action.label}
          </a>
        ))}
      </div>
    )}
  </div>
</div>

<style>
  .empty-state {
    @apply flex items-center justify-center min-h-[400px] py-12;
  }
  
  .empty-state-content {
    @apply text-center max-w-md mx-auto;
  }
  
  .empty-state-icon {
    @apply w-16 h-16 mx-auto mb-6 text-gray-400;
  }
  
  .empty-state-icon svg {
    @apply w-full h-full;
  }
  
  .empty-state-title {
    @apply text-xl font-semibold text-gray-900 mb-2;
  }
  
  .empty-state-description {
    @apply text-gray-600 mb-6;
  }
  
  .empty-state-actions {
    @apply flex flex-col sm:flex-row gap-3 justify-center;
  }
  
  .empty-state-button {
    @apply inline-flex items-center justify-center px-4 py-2 rounded-lg font-medium transition-colors duration-200 gap-2;
  }
  
  .empty-state-button.primary {
    @apply bg-red-600 text-white hover:bg-red-700;
  }
  
  .empty-state-button.secondary {
    @apply bg-gray-100 text-gray-700 hover:bg-gray-200;
  }
  
  .empty-state-button svg {
    @apply w-4 h-4;
  }
</style> 