---
export interface Props {
  lang?: string;
  placeholder?: string;
  showInfo?: boolean;
  initialQuery?: string;
  showResults?: boolean;
}

const { 
  lang = 'en', 
  placeholder = '...',
  showInfo = true,
  initialQuery = '',
  showResults = true
} = Astro.props;

import { generateUrl } from '@utils/tools.js';
const searchPageUrl = generateUrl(lang, '/search');

// 从字典获取多语言
import { getDictionary } from '../../../i18n/dictionaries.js';
const t = await getDictionary(lang);
const searchPlaceholder = t.search?.placeholder || placeholder;
const searchInfo = `💡 ${t.search?.tip || ''}`.trim();
// 准备客户端使用的翻译数据
const uiData = t.search?.ui || {};
---

<div class="pagefind-search-container" data-lang={lang} data-search-url={searchPageUrl}>
  <!-- Pagefind 搜索输入框 -->
  <div class="search-input-wrapper">
    <input 
      type="search" 
      class="search-input"
      placeholder={searchPlaceholder}
      aria-label="搜索"
      id="pagefind-search-input"
      value={initialQuery || ''}
    />
    <div class="search-icon" id="pagefind-search-icon">
      <svg width="20" height="20" viewBox="0 0 20 20" fill="none" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
      </svg>
    </div>
  </div>


  <!-- 搜索提示 -->
  {showInfo && (
    <div class="search-info">
      <p class="text-sm text-gray-500 mt-2">
        {searchInfo}
      </p>
    </div>
  )}
</div>

<script>
  // Pagefind 搜索功能
  document.addEventListener('DOMContentLoaded', async function() {
    const searchInput = document.getElementById('pagefind-search-input') as HTMLInputElement;
    const searchIcon = document.getElementById('pagefind-search-icon');
    // 兼容两种结果容器ID：组件内使用的 #pagefind-results 与搜索页使用的 #pagefind-search-results
    const resultsContainer = document.getElementById('pagefind-search-results') || document.getElementById('pagefind-results');
    const langContainer = document.querySelector('.pagefind-search-container') as HTMLElement;
    const searchPageUrl = (langContainer?.dataset.searchUrl || '/search');
    
    if (!searchInput) return;
    
    // 从URL参数设置搜索值
    const urlParams = new URLSearchParams(window.location.search);
    const query = urlParams.get('q') || '';
    if (query) {
      searchInput.value = query;
    }
    
    // 尝试复用已存在的 Pagefind 实例
    let pagefind: any = (window as any).pagefindInstance || null;

    // 监听页面派发的 pagefind:ready 事件，以便在实例稍后创建时复用
    window.addEventListener('pagefind:ready', () => {
      pagefind = (window as any).pagefindInstance || pagefind;
    });
    
    // 在搜索页面中，不重复初始化Pagefind，只复用现有实例
    if (!pagefind && resultsContainer) {
      // 等待一小段时间，让搜索页面有机会初始化Pagefind
      setTimeout(() => {
        pagefind = (window as any).pagefindInstance;
        if (pagefind && query) {
          pagefind.triggerSearch(query);
        }
      }, 100);
    }
    
    // 搜索输入处理
    let searchTimeout: NodeJS.Timeout | null = null;
    searchInput.addEventListener('input', function(e) {
      const target = e.target as HTMLInputElement;
      const query = target.value.trim();
      
      // 清除之前的超时
      if (searchTimeout) {
        clearTimeout(searchTimeout);
      }
      
      // 延迟搜索，避免频繁请求
      searchTimeout = setTimeout(() => {
        if (pagefind && query) {
          pagefind.triggerSearch(query);
        } else if (pagefind) {
          pagefind.triggerSearch('');
        }
      }, 300);
    });
    
    // 回车键搜索
    searchInput.addEventListener('keydown', function(e) {
      if (e.key === 'Enter') {
        e.preventDefault();
        const query = searchInput.value.trim();
        if (query) {
          if (pagefind) {
            pagefind.triggerSearch(query);
          } else {
            // 备用搜索：跳转到搜索页面
            window.location.href = `${searchPageUrl}?q=${encodeURIComponent(query)}`;
          }
        }
      }
    });
    
    // 点击搜索图标
    if (searchIcon) {
      searchIcon.addEventListener('click', function() {
        const query = searchInput.value.trim();
        if (query) {
          if (pagefind) {
            pagefind.triggerSearch(query);
          } else {
            // 备用搜索：跳转到搜索页面
            window.location.href = `${searchPageUrl}?q=${encodeURIComponent(query)}`;
          }
        }
      });
    }
    

  });
</script>

<style>
  .pagefind-search-container {
    position: relative;
    width: 100%;
    max-width: 600px;
    margin: 0 auto;
  }

  .search-input-wrapper {
    position: relative;
    display: flex;
    align-items: center;
  }

  .search-input {
    width: 100%;
    padding: 12px 48px 12px 16px;
    border: 2px solid #e5e7eb;
    border-radius: 8px;
    font-size: 16px;
    background: white;
    transition: all 0.3s ease;
  }

  .search-input:focus {
    outline: none;
    border-color: #dc2626;
    box-shadow: 0 0 0 3px rgba(220, 38, 38, 0.1);
  }

  .search-icon {
    position: absolute;
    right: 16px;
    color: #6b7280;
    cursor: pointer;
    transition: color 0.2s ease;
  }

  .search-icon:hover {
    color: #dc2626;
  }

  .search-info {
    text-align: center;
  }

  .search-results-container {
    margin-top: 1rem;
    max-height: 400px;
    overflow-y: auto;
    border: 1px solid #e5e7eb;
    border-radius: 8px;
    background: white;
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  }



  :global(.pagefind-ui__result-excerpt) {
    color: #6b7280;
    margin-top: 0.5rem;
  }

  :global(.pagefind-ui__result-meta) {
    color: #9ca3af;
    font-size: 0.875rem;
    margin-top: 0.5rem;
  }

  /* 响应式设计 */
  @media (max-width: 768px) {
    .pagefind-search-container {
      @apply w-full;
    }
    
    .search-input {
      @apply text-sm;
    }
    
    .search-results-container {
      max-height: 300px;
    }
  }
</style>
