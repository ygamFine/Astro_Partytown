---
import { Image } from 'astro:assets';
import { formatDate, generateUrl, getFirstImage } from '@utils/tools.js';

interface Props {
  items: Array<{
    id: string | number;
    title: string;
    image: any; // 改为any类型，支持导入的图片对象
    excerpt?: string;
    category?: string;
    url_slug: string;
    price?: string; // 添加价格字段
    advantages?: string[]; // 添加优势字段
    date?: string; // 添加日期字段
  }>;
  itemsPerRow?: number;
  maxRows?: number;
  mode?: 'products' | 'case' | 'news' | 'sidebar';
  translations?: any; // 添加翻译参数
  lang?: string; // 添加语言参数
  viewMode?: 'grid' | 'list'; // 添加视图模式参数
}

// 导入主题配置
import { themeConfig } from '@config/theme.js';

// 根据侧边栏显示状态动态调整列数
const sidebarVisible = themeConfig.layout.sidebar.visible;
// 列数
const defaultItemsPerRow = sidebarVisible ? 3 : 4;

// 传递的参数
const { items, itemsPerRow = defaultItemsPerRow, maxRows = 4, mode = 'product', translations = {}, lang = 'en', viewMode = 'grid' } = Astro.props;
const maxItems = itemsPerRow * maxRows;
const displayItems = items.slice(0, maxItems);
// 获取翻译文本
const t = translations || {};

// 获取产品卡片配置
const cardConfig = themeConfig.layout.productCard;

---

<div class="enhanced-grid-list" data-view-mode="grid" data-astro-reload>
  <!-- 卡片视图容器 -->
  <div class="grid-view-container" data-view="grid" data-astro-reload>
    <div class={mode === 'sidebar' ? 'grid grid-cols-1 gap-6 sidebar-grid' : `grid grid-cols-1 md:grid-cols-3 lg:grid-cols-${itemsPerRow} gap-6`}>
      {displayItems.map((item) => (
        <article class={`grid-item bg-white rounded-lg shadow-lg overflow-hidden group hover:shadow-xl transition-all duration-300 relative ${cardConfig.style.hoverEffect === 'lift' ? 'hover:-translate-y-1' : cardConfig.style.hoverEffect === 'scale' ? 'hover:scale-105' : ''}`}>
          <a href={generateUrl(lang, '/' + mode, item.url_slug) || 'javascript:void(0)'} class="block h-full">
            <div class="aspect-video overflow-hidden">
              <Image 
                src={getFirstImage(item.image || [])?.url || '/images/placeholder.webp'} 
                alt={getFirstImage(item.image || [])?.name || 'placeholder'}
                width="400"
                height="300"
                class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                loading="lazy"
                decoding="async"
              />
            </div>
            
            <div class={mode === 'sidebar' ? 'p-3 relative' : 'p-4 relative flex flex-col justify-start'}>
              {/* 默认显示内容 - 根据模式区分 */}
              {(mode === 'product' || mode === 'products') ? (
                <>
                  {/* 产品卡片默认显示 */}
                  {cardConfig.defaultDisplay.showName && (
                    <h3 class="text-lg font-semibold text-gray-900 mb-2 group-hover:text-red-600 transition-colors text-left whitespace-nowrap overflow-hidden text-ellipsis" style="min-height:3.5rem;display:flex;align-items:flex-start;">
                      {item.title}
                    </h3>
                  )}
                  
                  {cardConfig.defaultDisplay.showPrice && item.price && (
                    <div class="text-red-600 font-bold text-lg mb-2">
                      {item.price}
                    </div>
                  )}
                  
                  {cardConfig.defaultDisplay.showDescription && item.excerpt && (
                    <p class="text-gray-600 text-sm mb-4 line-clamp-3">
                      {item.excerpt}
                    </p>
                  )}
                </>
              ) : mode === 'news' ? (
                <>
                  {/* 新闻卡片默认显示 */}
                  <h3 class="text-lg font-semibold text-gray-900 mb-2 group-hover:text-red-600 transition-colors text-left whitespace-nowrap overflow-hidden text-ellipsis">
                    {item.title}
                  </h3>
                  
                  {item.excerpt && (
                    <p class="text-gray-600 text-sm mb-4 line-clamp-3">
                      {item.excerpt}
                    </p>
                  )}
                  
                  {item.date && (
                    <div class="text-xs text-gray-400 mt-auto">
                      {formatDate(item.date)}
                    </div>
                  )}
                </>
              ) : (
                <>
                  {/* 案例卡片默认显示 */}
                  <h3 class="text-lg font-semibold text-gray-900 mb-2 group-hover:text-red-600 transition-colors text-left whitespace-nowrap overflow-hidden text-ellipsis">
                    {item.title}
                  </h3>
                  
                  {item.excerpt && (
                    <p class="text-gray-600 text-sm mb-4 line-clamp-3">
                      {item.excerpt}
                    </p>
                  )}
                </>
              )}
              
              {/* 鼠标悬停弹出层 - 只对产品卡片生效 */}
              {(mode === 'product' || mode === 'products') && (
                <div class="absolute inset-0 bg-red-600 text-white px-6 py-4 transform translate-y-full group-hover:translate-y-0 transition-transform duration-300 ease-out flex flex-col justify-between">
                  <div>
                    {cardConfig.hoverOverlay.showName && (
                      <h4 class="font-bold text-base leading-tight text-left mb-2">{item.title}</h4>
                    )}
                    
                    {cardConfig.hoverOverlay.showDescription && item.excerpt && (
                      <p class="text-xs opacity-90 mb-3 line-clamp-2">{item.excerpt}</p>
                    )}
                    
                    {cardConfig.hoverOverlay.showAdvantages && item.advantages && item.advantages.length > 0 && (
                      <div class="mb-3">
                        <p class="text-xs font-semibold mb-1">产品优势：</p>
                        <ul class="text-xs opacity-90 space-y-1">
                          {item.advantages.slice(0, 2).map(advantage => (
                            <li class="flex items-center">
                              <svg class="w-3 h-3 mr-1 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                              </svg>
                              {advantage}
                            </li>
                          ))}
                        </ul>
                      </div>
                    )}
                  </div>
                  
                  <div class="flex items-center justify-between">
                    {cardConfig.hoverOverlay.showContactButton && (
                      <button 
                        type="button"
                        class="contact-btn flex items-center space-x-1 hover:opacity-80 transition-opacity"
                        data-product-name={item.title}
                        onclick={`event.stopPropagation(); event.preventDefault(); openContactModal({name: '${item.title}'})`}
                      >
                        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                          <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"></path>
                          <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"></path>
                        </svg>
                        <span class="font-medium text-sm">{t.product_card?.contact_now || '立即联系'}</span>
                      </button>
                    )}
                    
                    {cardConfig.hoverOverlay.showAddToCart && 
                     !themeConfig.restrictions.languageRestrictions[lang as keyof typeof themeConfig.restrictions.languageRestrictions]?.hideAddToCart && (
                      <div class="flex items-center space-x-1">
                        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                          <path d="M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"></path>
                        </svg>
                        <span class="font-medium text-sm">{t.product_card?.add_to_cart || 'Add to Cart'}</span>
                      </div>
                    )}
                  </div>
                </div>
              )}
              
              {/* 新闻卡片悬停效果 */}
              {mode === 'news' && (
                <div class="absolute inset-0 bg-red-600 text-white px-6 py-4 transform translate-y-full group-hover:translate-y-0 transition-transform duration-300 ease-out flex flex-col justify-center">
                  <h4 class="font-bold text-base leading-tight text-center mb-2">{item.title}</h4>
                  {item.date && (
                    <p class="text-xs opacity-90 text-center">{formatDate(item.date)}</p>
                  )}
                </div>
              )}
              
              {/* 案例卡片悬停效果 */}
              {mode === 'case' && (
                <div class="absolute inset-0 bg-red-600 text-white px-6 py-4 transform translate-y-full group-hover:translate-y-0 transition-transform duration-300 ease-out flex items-center justify-center">
                  <h4 class="font-bold text-base leading-tight text-center w-full">{item.title}</h4>
                </div>
              )}
            </div>
          </a>
        </article>
      ))}
    </div>
  </div>

  <!-- 列表视图容器 -->
  <div class="list-view-container hidden" data-view="list" data-astro-reload>
    <div class="space-y-6">
      {displayItems.map((item: any) => (
        <article class="bg-white rounded-lg shadow-md overflow-hidden border border-gray-200 hover:shadow-lg transition-shadow duration-300">
          <div class="flex flex-col md:flex-row">
            <!-- 左侧图片 -->
            <div class="md:w-80 md:flex-shrink-0 overflow-hidden">
              <a href={generateUrl(lang, '/' + mode, item.url_slug) || 'javascript:void(0)'} class="block aspect-[4/3] group">
                <Image 
                  src={item.image && item.image.length > 0 ? item.image[0].url : '/images/placeholder.webp'}
                  alt={item.image && item.image.length > 0 ? item.image[0].name : ''}
                  width="400"
                  height="300"
                  class="w-full h-full object-cover transition-transform duration-300 ease-in-out group-hover:scale-110"
                  loading="lazy"
                  decoding="async"
                />
              </a>
            </div>
            
            <!-- 右侧内容 -->
            <div class="flex-1 p-6 flex flex-col">
              <div class="flex-grow">
                <!-- 标题 -->
                <h3 class="text-xl font-semibold text-gray-800 mb-3">
                  <a href={item.href} class="hover:text-red-600 transition-colors">
                    {item.title}
                  </a>
                </h3>
                
                <!-- 价格（仅产品模式） -->
                {(mode === 'product' || mode === 'products') && item.price && (
                  <div class="text-red-600 font-bold text-lg mb-3">
                    {item.price}
                  </div>
                )}
                
                <!-- 摘要 -->
                {item.excerpt && (
                  <p class="text-gray-600 mb-4 line-clamp-3 leading-relaxed">
                    {item.excerpt}
                  </p>
                )}
                
                <!-- 产品优势（仅产品模式） -->
                {(mode === 'product' || mode === 'products') && item.advantages && item.advantages.length > 0 && (
                  <div class="mb-4">
                    <p class="text-sm font-semibold text-gray-700 mb-2">产品优势：</p>
                    <ul class="text-sm text-gray-600 space-y-1">
                      {item.advantages.slice(0, 3).map((advantage: any) => (
                        <li class="flex items-center">
                          <svg class="w-4 h-4 mr-2 flex-shrink-0 text-red-500" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                          </svg>
                          {advantage}
                        </li>
                      ))}
                    </ul>
                  </div>
                )}
              </div>
              
              <!-- 底部操作区域 -->
              <div class="flex justify-between items-end pt-4 border-t border-gray-100">
                <div class="flex space-x-3">
                  {(mode === 'product' || mode === 'products') && (
                    <button 
                      type="button"
                      class="contact-btn inline-block bg-red-600 text-white hover:bg-red-700 font-semibold px-6 py-2 rounded-md transition-colors text-sm"
                      data-product-name={item.title}
                      onclick={`openContactModal({name: '${item.title}'})`}
                    >
                      {t.product_card?.contact_now}
                    </button>
                  )}
                  
                  {mode !== 'product' && mode !== 'products' && (
                    <a href={item.href} class="inline-block bg-red-600 text-white hover:bg-red-700 font-semibold px-6 py-2 rounded-md transition-colors text-sm">
                      {t.actions?.view}
                    </a>
                  )}
                </div>
                
                <!-- 日期显示 -->
                {item.date && (
                  <span class="text-sm text-gray-400">
                    {formatDate(item.date)}
                  </span>
                )}
              </div>
            </div>
          </div>
        </article>
      ))}
    </div>
  </div>
</div>

<style>
  .enhanced-grid-list {
    @apply w-full;
  }
  
  .grid-item {
    @apply transform transition-all duration-300;
  }
  
  
  
  /* Sidebar模式始终保持单列 */
  .sidebar-grid {
    @apply grid-cols-1 !important;
  }
  
  /* 确保网格在移动设备上正确显示 */
  @media (max-width: 768px) {
    .grid-view-container .grid {
      @apply grid-cols-1;
    }
  }
  
  @media (min-width: 769px) and (max-width: 1024px) {
    .grid-view-container .grid:not(.sidebar-grid) {
      @apply grid-cols-2;
    }
  }
  
  /* 列表视图在移动设备上的响应式 */
  @media (max-width: 768px) {
    .list-view-container .flex-col {
      flex-direction: column;
    }
    
    .list-view-container .md\:w-80 {
      width: 100%;
    }
  }
</style>
