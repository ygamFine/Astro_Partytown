---
import { Image } from 'astro:assets';
import { getFirstImage, generateUrl } from '../../../../utils/tools';

// 定义组件props接口
export interface Props {
  data?: {
    title?: string;
    description?: string;
    url_text?: string;
    products?: Array<{
      image?: Array<{
        url: string;
        name: string;
      }>;
      bigImage?: Array<{
        url: string;
        name: string;
      }>;
      name?: string;
      title?: string;
      url?: string;
      url_text?: string;
    }>;
    bigImgBg?: {
      url: string;
      name: string;
      alt: string;
      width: number;
      height: number;
    } | null;
  };
  lang: string;
}

// 获取props，提供默认值
const { data = {}, lang } = Astro.props;
const { 
  title = '', 
  description = '', 
  products = [] ,
  bigImgBg = null
} = data;

// 安全处理产品数据
const safeProducts = Array.isArray(products) ? products.slice(0, 10) : [];
// 为每个产品生成唯一ID
const productIds = safeProducts.map((_, index) => `product-${index}`);

---


<section class="product-showcase">
  <div class="container">
    <div class="product-showcase-content">
      <!-- 左侧区域：标题 + 描述文字 + 进度条 + 三张图片 -->
      <div class="product-left-box">
        <!-- 标题居左对齐 -->
        <h2 class="animate-fade-up block-title">{title}</h2>
        
        <!-- 描述文字在黑点灰线顶上 -->
        <p class="description animate-fade-up animate-delay-200 block-desc">{description}</p>
        
        <!-- 进度条在左侧三张图头顶上 -->
    
        
        <!-- 左侧小图片 -->
        <div class="swiper honor-swiper0">
          <div class="swiper-wrapper">
            {safeProducts.length > 0 ? (
              safeProducts.map((product, index) => {
                const productName = product.name || product.title || `Product ${index + 1}`;
                const productImage = getFirstImage(product.image || []);
                const productSlug = product.url || `product-${index + 1}`;
                const urlText = product.url_text || '';
                
                return (
                  <div 
                    class="swiper-slide" 
                    data-index={index}
                    data-product-id={[index]}
                    role="button"
                    tabindex="0"
                    aria-label={`View ${productName}`}
                  >
                    <div class="product-item">
                      <Image 
                        src={productImage?.url || '/images/placeholder.webp'}
                        alt={productImage?.name || productName}
                        width={227}
                        height={193}
                        loading="lazy"
                        decoding="async"
                        class="product-thumbnail" 
                      />
                    </div>
                    <h3 class="product-name">{productName}</h3>
                    <a 
                      href={generateUrl(lang, '/products', productSlug)} 
                      class="view-details-btn btn-hover-animate"
                      aria-label={`View details for ${productName}`}
                    >
                      {urlText}
                    </a>
                  </div>
                );
              })
            ) : (
              // 如果没有产品数据，显示默认的占位符
              <div class="product-item active animate-fade-left animate-delay-400" data-index="0">
                <div class="overflow-hidden">
                  <Image 
                    src="/images/placeholder.webp"
                    alt="No products available" 
                    width={227}
                    height={193}
                    loading="lazy"
                    decoding="async"
                    class="thumbnail-image transition-transform duration-300 hover:scale-105" 
                  />
                </div>
                <h3>No products available</h3>
                <a href="/products" class="view-details-btn btn-hover-animate">View All Products</a>
              </div>
            )}
          
            
          </div>
        </div>
      </div>
      
      <!-- 右侧大图显示 -->
      <div class="product-right-box">
        <Image 
          src={bigImgBg?.url || '/images/placeholder.webp'}
          alt={bigImgBg?.name || 'loading...'} 
          width={590}
          height={356}
          loading="lazy"
          decoding="async"
          class="big-img-bg" 
        />
        {safeProducts.length > 0 ? (
          safeProducts.map((product, index) => {
            const productName = product.name || product.title || `Product ${index + 1}`;
            const bigImage = getFirstImage(product.bigImage || [])
            return (
              <div class="product-item" data-product-id={[index]}>
                <Image 
                  id={`mainProductImage-${index}`}
                  src={bigImage?.url || '/images/placeholder.webp'}
                  alt={bigImage?.name || productName}
                  width={600}
                  height={400}
                  loading={index === 0 ? "eager" : "lazy"}
                  decoding="async"
                  class={`main-product-image transition-all duration-500 ease-in-out hover:scale-105 ${index === 0 ? 'active' : 'hidden'}`}
                  data-product-id={productIds[index]}
                />
              </div>
            );
          })
        ) : null}
      </div>
    </div>
  </div>
</section>


<style>
  .product-showcase {
    background: #fff;
    padding: 2rem 0 8rem 0;
    .block-title{
      font-family: Antonio-Bold;
      font-weight: bold;
      font-size: 6rem;
      color: #18181F;
      line-height: 7rem;
    }
    .block-desc{
      font-weight: 400;
      font-size: 1.6rem;
      color: #18181F;
      line-height: 2.4rem;
      padding: 0;
      width: 80%;
      margin-top: 1rem;
    }
     .product-showcase-content{
       /* display: grid;
       grid-template-columns: 2.5fr 1fr;
       gap: 4rem;
       align-items: start; */
       
       .product-left-box{
         /* 确保 Swiper 容器有正确的宽度 */
         width: 60%;
         display: inline-block;
         padding-right: 8rem;
         vertical-align: top;
         
         .honor-swiper0{
            margin-top: 8rem;
            padding-top: 8rem;
            &::before{
              content: '';
              display: inline-block;
              position: absolute;
              left: 0;
              top: 3rem;
              width: 100%;
              height: 4px;
              background: #DDDDDD;
            }
             .swiper-slide{
               position: relative;
               cursor: pointer;
               transition: all 0.3s ease;
               width: 229px;
               margin-right: 90px;
               word-break: normal;
               
               &::before{
                 content: '';
                 display: inline-block;
                 position: absolute;
                 left: 50%;
                 margin-left: -0.8rem;
                 top: -5.7rem;
                 width: 1.6rem;
                 height: 1.6rem;
                 background: #18181F;
                 border-radius: 50%;
                 transition: all 0.3s ease;
               }
              
             }
            .swiper-slide.dianActive{
              &::before{
                content: '';
                display: inline-block;
                width: 4rem;
                height: 4rem;
                background-color: #E81A1A;
                border-radius: 50%;            
                background-size: 24px 14px;
                background-repeat: no-repeat;
                background-position: center;
                background-image: url('/images/img-icon.png');
                position: absolute;
                left: 50%;
                margin-left: -2rem;
                top: -7rem;
              }
            }
         }
         .product-name{
          font-weight: 400;
          font-size: 1.8rem;
          color: #18181F;
          line-height: 2.4rem;
          margin-top: 1rem;
         }
         .view-details-btn{
          display: inline-block;
          width: auto;
          padding: 0 0.5rem;
          height: 3rem;
          line-height: 3rem;
          position: relative;
          z-index: 3;
          overflow: hidden;
          font-family: Poppins-Medium;
          font-weight: 500;
          font-size: 2rem;
          color: #18181F;
          transition: all .3s linear;
          margin-top: 1rem;
          &:hover{
            color: #FEFEFE;
          }
          &::before{
            content: '';
            display: inline-block;
            position: absolute;
            left: 0;
            right: 0;
            bottom: 0;
            z-index: -1;
            width: 100%;
            height: 3px;
            background: #E81A1A;
            transition: all .3s linear;
          }
          &:hover::before{
            height: 100%;
          }
         }
       }
       
         .product-right-box{
           width: 39%;
           display: inline-block;
           overflow: hidden;
           position: relative;
           height: 51rem;
           margin-top: 8rem;
           .big-img-bg{
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
           }
            .product-item {
              position: absolute;
              width: 100%;
              height: 100%;
              left: 0;
              top: 0;
            }
            
            .main-product-image {
              position: absolute;
              top: 0;
              left: 0;
              width: 100%;
              height: 100%;
              object-fit: cover;
              transition: all 0.8s ease-in-out;
              opacity: 0;
              visibility: hidden;
              transform: scale(0.95);
            }
            
            .main-product-image.active {
              opacity: 1;
              visibility: visible;
              transform: scale(1);
            }
            
            .main-product-image.hidden {
              opacity: 0;
              visibility: hidden;
              transform: scale(0.95);
            }
         }
     }
  }
 
   @media (max-width: 768px) {
     section.product-showcase{
       .block-title{
         font-size: 3rem;
         line-height: 5rem;
       }
       .block-desc{
         width: 96%;
       }
      .product-showcase-content {
        .product-left-box{
          width: 100%;
          padding-right: 0;
        }
        .product-right-box {
          width: 100%;
          margin-top: 1rem;
        }
        .product-left-box{
          .honor-swiper0 .swiper-slide{
            width: 194.5px;
            margin-right: 20px;
          }
        }
        
      }
     }
     
  
    
  }

  </style>

<!-- 使用 Intersection Observer 实现懒加载 -->
<script>
  document.addEventListener('DOMContentLoaded', async function() {
    // 检查是否存在轮播容器
    const swiperContainer = document.querySelector('.honor-swiper0');
    if (!swiperContainer) {
      console.warn('轮播容器 .honor-swiper0 未找到');
      return;
    }

    // 创建 Intersection Observer
    const observer = new IntersectionObserver(async (entries) => {
      for (const entry of entries) {
        if (entry.isIntersecting) {
          // 元素进入视口时初始化 Swiper
          try {
            // 按需加载 Swiper 核心模块
            const { loadSwiper, injectSwiperStyles } = await import('@utils/swiperLoader');
            const { Swiper, Navigation, Pagination, Autoplay } = await loadSwiper();
            injectSwiperStyles();
            
            // 初始化 Swiper
            const swiper = new Swiper('.honor-swiper0', {
              modules: [Navigation, Pagination, Autoplay],
        // 基本配置
        slidesPerView: 3,
        spaceBetween: 20,
        loop: false,
        centeredSlides: false,
        autoplay: false,
        
        // 响应式断点
        breakpoints: {
          320: {
            slidesPerView: 2,
            spaceBetween: 20,
          },
          640: {
            slidesPerView: 2,
            spaceBetween: 20,
          },
          768: {
            slidesPerView: 2,
            spaceBetween: 20,
          },
          1024: {
            slidesPerView: 3,
            spaceBetween: 90,
          },
        },
        
        // 分页器
        pagination: {
          el: '.swiper-pages-nation',
          clickable: true,
          dynamicBullets: false,
        
        },
        
        // 导航按钮
        navigation: {
          nextEl: '.swiper-button-next',
          prevEl: '.swiper-button-prev',
        },
        
        // 效果
        effect: 'slide',
        speed: 600,
        
        // 鼠标悬停暂停自动播放和滑动事件
        on: {
          
          slideChange: function(swiper: any) {
            // 当 Swiper 滑动时，同步更新大图显示
            const mainImages = document.querySelectorAll('.product-right-box .main-product-image');
            const slides = document.querySelectorAll('.honor-swiper0 .swiper-slide');
            const activeIndex = swiper.activeIndex;
            
            // 移除所有 slide 的 dianActive 类
            slides.forEach(slide => {
              slide.classList.remove('dianActive');
            });
            
            // 给当前活动的 slide 添加 dianActive 类
            if (slides[activeIndex]) {
              slides[activeIndex].classList.add('dianActive');
            }
            
            // 移除所有图片的 active 类，添加 hidden 类
            mainImages.forEach(img => {
              img.classList.remove('active');
              img.classList.add('hidden');
            });
            
            // 显示对应的大图
            if (mainImages[activeIndex]) {
              mainImages[activeIndex].classList.remove('hidden');
              mainImages[activeIndex].classList.add('active');
            }
          }
        }
      });
      
      
      // 添加点击事件监听器
      const slides = document.querySelectorAll('.honor-swiper0 .swiper-slide');
      const mainImages = document.querySelectorAll('.product-right-box .main-product-image');
      
      // 初始化：设置第一个 slide 和图片为活动状态
      
      if (slides.length > 0) {
        slides[0].classList.add('dianActive');
      }
      if (mainImages.length > 0) {
        mainImages[0].classList.add('active');
        mainImages[0].classList.remove('hidden');
      }
      
        slides.forEach((slide, index) => {
          slide.addEventListener('click', function() {
            
            // 先移除所有 slide 的 dianActive 类
            slides.forEach(s => {
              s.classList.remove('dianActive');
            });
            
            // 然后给当前点击的 slide 添加 dianActive 类
            slide.classList.add('dianActive');
            
            // 移除所有图片的 active 类，添加 hidden 类
            mainImages.forEach(img => {
              img.classList.remove('active');
              img.classList.add('hidden');
            });
            
            // 显示对应的大图
            if (mainImages[index]) {
              mainImages[index].classList.remove('hidden');
              mainImages[index].classList.add('active');
            } else {
            }
            
            // 更新 Swiper 到对应的 slide
            swiper.slideTo(index);
          });
        });
      
          } catch (error) {
            console.error('Swiper 加载失败:', error);
          }
          
          // 停止观察，避免重复初始化
          observer.unobserve(entry.target);
        }
      }
    }, {
      // 当元素 10% 可见时触发
      threshold: 0.1,
      // 提前 50px 开始加载
      rootMargin: '50px'
    });

    // 开始观察轮播容器
    observer.observe(swiperContainer);
  });
</script> 