---
import { getBannerData } from '../../../../apis/homeBanner';
import { getFirstImage, generateUrl } from '@utils/tools';
import { Image } from 'astro:assets';

// 定义组件props接口
export interface Props {
  bannerData?: Array<{
    id: number;
    name: string;
    description: string;
    link: string | null;
    image: string;
    mobileImage?: string;
    shipin?: string;
    alt: string;
  }>;
}

// 获取props
const banners = await getBannerData('homepage');
console.log('JSON格式:', JSON.stringify(banners));
console.log('============banners============',banners);
---

<!-- 响应式Banner容器 -->
<section class="banner-container" id="homepage-banner">
  <!-- Banner轮播 -->
  <div class="swiper banner-swiper3">
    <div class="swiper-wrapper">
    {(banners && Array.isArray(banners)) ? banners.map((banner, index) => (
        <div class="swiper-slide">
          {/* PC端图片/视频 */}
          <div class="desktop-banner-image">
            {banner.field_bannershipin_url ? (
              <video
                src={banner.field_bannershipin_url}
                poster={banner.field_tupian_url}
                autoplay
                muted
                playsinline
                width={1440}
                height={600}
                class="banner-image"
                style="width: 100%; height: 100%; object-fit: cover; object-position: center; transition: transform 0.3s ease;"
              >
                您的浏览器不支持视频播放
              </video>
            ) : banner.desktopImage ? (
              <Image
                src={banner.desktopImage}
                alt={banner.alt}
                width={1920}
                height={800}
                loading={index === 0 ? "eager" : "lazy"}
                fetchpriority={index === 0 ? "high" : "auto"}
                decoding="async"
                class="banner-image"
                style="width: 100%; height: 100%; object-fit: cover; object-position: center; transition: transform 0.3s ease;"
              />
            ) : null}
          </div>
          {/* 手机端图片/视频 */}
          <div class="mobile-banner-image">
            {banner.field_bannershipin_url ? (
              <video
                src={banner.field_bannershipin_url}
                poster={banner.field_shouji_url || banner.field_tupian_url}
                autoplay
                muted
                playsinline
                width={750}
                height={300}
                class="banner-image"
                style="width: 100%; height: 100%; object-fit: cover; object-position: center; transition: transform 0.3s ease;"
              >
                您的浏览器不支持视频播放
              </video>
            ) : banner.field_shouji_url ? (
              <Image
                src={banner.field_shouji_url}
                alt={banner.alt}
                width={750}
                height={300}
                loading={index === 0 ? "eager" : "lazy"}
                fetchpriority={index === 0 ? "high" : "auto"}
                decoding="async"
                class="banner-image"
                style="width: 100%; height: 100%; object-fit: cover; object-position: center; transition: transform 0.3s ease;"
              />
            ) : banner.field_tupian_url && (
              <Image
                src={banner.field_tupian_url}
                alt={banner.alt}
                width={750}
                height={300}
                loading={index === 0 ? "eager" : "lazy"}
                fetchpriority={index === 0 ? "high" : "auto"}
                decoding="async"
                class="banner-image"
                style="width: 100%; height: 100%; object-fit: cover; object-position: center; transition: transform 0.3s ease;"
              />
            )}
          </div>
        </div>
    )) : null}
    </div>
    <div class="swiper-bottom-box">
      <!-- 分页器 -->
      <div class="banner-swiper-pagination"></div>
  </div>
  </div>
</section>

<style>
  /* Banner容器样式 - 已在Layout中定义，这里补充轮播功能 */
  .banner-swiper3 {
    .mobile-banner-image{
      display: none;
    }
    .swiper-bottom-box{
      position: absolute;
      left: 0;
      bottom: 2rem;
      z-index: 9;
      right: 0;
      text-align: center;
    }
    .banner-swiper-pagination{
      .swiper-pagination-bullet{
        background-color: rgba(187, 22, 9, 0) !important;
        border: 2px solid #FFFFFF;
        border-radius: 0;
        width: 12px;
        height: 12px;
        margin: .8rem;
        opacity: 1;
      }
      .swiper-pagination-bullet-active{
        background-color: #FFFFFF !important;
      }
    }
  }
  @media (max-width: 768px) {
    .banner-swiper3 {
      .mobile-banner-image{
        display: block;
      }
      .desktop-banner-image{
        display: none;
      }
    }
  }
  
</style>

<!-- 使用共享的 Swiper 加载器 -->
<script>
  document.addEventListener('DOMContentLoaded', async function() {
      const swiperContainer = document.querySelector('.banner-swiper3');
      if (!swiperContainer) return;

      // 添加加载状态类
      swiperContainer.classList.add('swiper-loading');

      try {
          // 使用共享的 Swiper 加载器
          const Swiper = (await import('swiper/bundle')).default;

          // 初始化 Swiper
          const swiper = new Swiper('.banner-swiper3', {
              // 基本配置
              slidesPerView: 1,
              spaceBetween: 0,
              loop: true,
              autoplay: {
                  delay: 5000,
                  disableOnInteraction: false,
              },
              // 分页器
              pagination: {
                el: '.banner-swiper-pagination',
                clickable: true,
                dynamicBullets: false,
              },

              // 导航按钮
              navigation: {
                  nextEl: '.swiper-button-right',
                  prevEl: '.swiper-button-left',
              },

              // 效果
              effect: 'slide',
              speed: 600,

              // 鼠标悬停暂停自动播放
              on: {
                  init: function(swiper: any) {
                      // 移除加载状态类
                      swiperContainer.classList.remove('swiper-loading');
                      swiperContainer.classList.add('swiper-loaded');

                      swiper.el.addEventListener('mouseenter', () => {
                          if (swiper.autoplay) {
                              swiper.autoplay.stop();
                          }
                      });
                      swiper.el.addEventListener('mouseleave', () => {
                          if (swiper.autoplay) {
                              swiper.autoplay.start();
                          }
                      });
                  }
              }
          });


      } catch (error) {
          console.error('Swiper 加载失败:', error);
          // 即使加载失败也要移除加载状态
          swiperContainer.classList.remove('swiper-loading');
          swiperContainer.classList.add('swiper-error');
      }
  });
</script>