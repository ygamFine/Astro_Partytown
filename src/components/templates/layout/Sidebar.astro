---
interface Props {
  currentSection?: 'products' | 'news' | 'cases';
}

const { currentSection } = Astro.props;
const currentPath = Astro.url.pathname;

// ÂØºÂÖ•‰∏ªÈ¢òÈÖçÁΩÆ
import { themeConfig } from '../../../config/theme.js';

// Ëé∑Âèñ‰æßËæπÊ†èÈÖçÁΩÆ
const sidebarConfig = themeConfig.layout.sidebar;

// ÂÆö‰πâ‰∏â‰∏™‰∏ªË¶ÅËèúÂçïÈ°π
const menuItems = [
  {
    id: 'products',
    title: '‰∫ßÂìÅ',
    icon: 'üèóÔ∏è',
    mainLink: '/products',
    items: [
      { label: 'ÊªëÁßªË£ÖËΩΩÊú∫', href: '/products/category/skid-steer', count: 12 },
      { label: 'ÂèçÈì≤Ë£ÖËΩΩÊú∫', href: '/products/category/backhoe', count: 8 },
      { label: '‰º∏Áº©ËáÇË£ÖËΩΩÊú∫', href: '/products/category/telescopic', count: 6 },
      { label: 'ÁîµÂä®Êú∫Ê¢∞', href: '/products/category/electric', count: 4 },
      { label: 'ÁÉ≠Èó®‰∫ßÂìÅ', href: '/products/category/hot-selling', count: 15 },
      { label: 'Êñ∞ÂìÅÂà∞Ë¥ß', href: '/products/category/new-arrivals', count: 5 },
    ]
  },
  {
    id: 'news',
    title: 'Êñ∞Èóª',
    icon: 'üì∞',
    mainLink: '/news',
    items: [
      { label: 'ÂÖ¨Âè∏Êñ∞Èóª', href: '/news/category/company', count: 25 },
      { label: 'Ë°å‰∏öÊñ∞Èóª', href: '/news/category/industry', count: 18 },
      { label: '‰∫ßÂìÅÊõ¥Êñ∞', href: '/news/category/product', count: 12 },
      { label: 'Ê¥ªÂä®ËµÑËÆØ', href: '/news/category/events', count: 8 },
      { label: '2024Âπ¥', href: '/news/archive/2024', count: 35 },
      { label: '2023Âπ¥', href: '/news/archive/2023', count: 42 },
    ]
  },
  {
    id: 'cases',
    title: 'Ê°à‰æã',
    icon: 'üìã',
    mainLink: '/case',
    items: [
      { label: 'Âª∫Á≠ëÈ°πÁõÆ', href: '/case/category/construction', count: 20 },
      { label: 'Áüø‰∏ö‰Ωú‰∏ö', href: '/case/category/mining', count: 15 },
      { label: 'ÂÜú‰∏öÂ∫îÁî®', href: '/case/category/agriculture', count: 12 },
      { label: 'Â∏ÇÊîøÈ°πÁõÆ', href: '/case/category/municipal', count: 8 },
      { label: 'ÂåóÁæéÂú∞Âå∫', href: '/case/region/north-america', count: 18 },
      { label: 'Ê¨ßÊ¥≤Âú∞Âå∫', href: '/case/region/europe', count: 22 },
      { label: '‰∫öÂ§™Âú∞Âå∫', href: '/case/region/asia-pacific', count: 15 },
    ]
  }
];

// Ê†πÊçÆÈÖçÁΩÆÊ®°ÂºèÂ§ÑÁêÜËèúÂçïÈ°π
const getProcessedMenuItems = () => {
  const { displayMode, fixedOrder, autoExpandCurrent } = sidebarConfig;
  
  // ‰∏∫ÊØè‰∏™ËèúÂçïÈ°πÊ∑ªÂä†Áä∂ÊÄÅ‰ø°ÊÅØ
  const allMenuItems = menuItems.map(menu => ({
    ...menu,
    isActive: menu.id === currentSection,
    defaultOpen: autoExpandCurrent && menu.id === currentSection
  }));

  switch (displayMode) {
    case 'current-top':
      // ÂΩìÂâçËèúÂçïÈ°πÁΩÆÈ°∂ÊòæÁ§∫
      return [...allMenuItems].sort((a, b) => {
        if (a.id === currentSection) return -1;
        if (b.id === currentSection) return 1;
        return 0;
      });
      
    case 'fixed-order':
      // Âõ∫ÂÆöËèúÂçïÈ°∫Â∫è
      const orderedItems = [];
      const remainingItems = [...allMenuItems];
      
      // ÊåâÁÖßÂõ∫ÂÆöÈ°∫Â∫èÊéíÂàó
      fixedOrder.forEach(id => {
        const item = remainingItems.find(item => item.id === id);
        if (item) {
          orderedItems.push(item);
          remainingItems.splice(remainingItems.indexOf(item), 1);
        }
      });
      
      // Ê∑ªÂä†Ââ©‰ΩôÈ°πÁõÆ
      orderedItems.push(...remainingItems);
      return orderedItems;
      
    case 'current-only':
      // Âè™ÊòæÁ§∫ÂΩìÂâçÊ®°ÂùóËèúÂçï
      return allMenuItems.filter(item => item.id === currentSection);
      
    default:
      return allMenuItems;
  }
};

const accordionMenus = getProcessedMenuItems();
---

<aside class="accordion-sidebar bg-white rounded-lg shadow-lg overflow-hidden">
  <!-- ÊâãÈ£éÁê¥ËèúÂçï -->
  <nav class="accordion-nav">
    {accordionMenus.map((menu) => (
      <div class="accordion-section" data-section={menu.id}>
        <div class={`accordion-header-wrapper ${menu.isActive ? 'active' : ''}`}>
          <!-- ÂèØÁÇπÂáªÁöÑÊ†áÈ¢òÈìæÊé•Âå∫Âüü -->
          <a 
            href={menu.mainLink}
            class="accordion-title-link"
          >
            <div class="flex items-center flex-1">
              <span class="text-2xl mr-3">{menu.icon}</span>
              <span class="font-medium">{menu.title}</span>
            </div>
          </a>
          
          <!-- ÊâãÈ£éÁê¥ÂàáÊç¢ÊåâÈíÆ -->
          <button 
            class="accordion-toggle-btn"
            data-accordion-toggle={menu.id}
            aria-expanded={menu.defaultOpen ? 'true' : 'false'}
            aria-label={`Â±ïÂºÄ/ÊäòÂè† ${menu.title} ËèúÂçï`}
          >
            <svg 
              class="accordion-chevron w-6 h-6 transform transition-transform duration-200"
              fill="none" 
              stroke="currentColor" 
              viewBox="0 0 24 24"
            >
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
            </svg>
          </button>
        </div>
        
        <div 
          class={`accordion-content ${menu.defaultOpen ? 'accordion-open' : ''}`}
          data-accordion-content={menu.id}
        >
          <ul class="accordion-list">
            <!-- Â≠êÂàÜÁ±ªÈìæÊé• -->
            {menu.items.map((item) => (
              <li>
                <a 
                  href={item.href}
                  class={`accordion-link ${currentPath === item.href ? 'active' : ''}`}
                >
                  <span class="flex-1">{item.label}</span>
                  {sidebarConfig.showCount && (
                    <span class="accordion-count">({item.count})</span>
                  )}
                </a>
              </li>
            ))}
          </ul>
        </div>
      </div>
    ))}
  </nav>
</aside>

<script>
  // ÊâãÈ£éÁê¥ÂäüËÉΩÂÆûÁé∞
  function initAccordion() {
    const accordionButtons = document.querySelectorAll('.accordion-toggle-btn');
    const { allowMultipleOpen } = JSON.parse(document.querySelector('script[data-sidebar-config]')?.textContent || '{}');
    
    accordionButtons.forEach(button => {
      button.addEventListener('click', function(event) {
        const target = event.currentTarget as HTMLElement;
        const sectionId = target.getAttribute('data-accordion-toggle');
        
        if (!sectionId) return;
        
        const content = document.querySelector(`[data-accordion-content="${sectionId}"]`) as HTMLElement;
        const chevron = target.querySelector('.accordion-chevron') as HTMLElement;
        
        if (!content || !chevron) return;
        
        const isOpen = content.classList.contains('accordion-open');
        
        // Â¶ÇÊûú‰∏çÂÖÅËÆ∏ÂêåÊó∂Â±ïÂºÄÂ§ö‰∏™ËèúÂçïÔºåÂÖàÂÖ≥Èó≠ÂÖ∂‰ªñËèúÂçï
        if (!allowMultipleOpen && !isOpen) {
          accordionButtons.forEach(otherButton => {
            if (otherButton !== button) {
              const otherSectionId = otherButton.getAttribute('data-accordion-toggle');
              const otherContent = document.querySelector(`[data-accordion-content="${otherSectionId}"]`) as HTMLElement;
              const otherChevron = otherButton.querySelector('.accordion-chevron') as HTMLElement;
              
              if (otherContent && otherChevron) {
                otherContent.classList.remove('accordion-open');
                otherButton.setAttribute('aria-expanded', 'false');
                otherChevron.style.transform = 'rotate(0deg)';
              }
            }
          });
        }
        
        // ÂàáÊç¢Â±ïÂºÄ/ÊäòÂè†Áä∂ÊÄÅ
        if (isOpen) {
          content.classList.remove('accordion-open');
          target.setAttribute('aria-expanded', 'false');
          chevron.style.transform = 'rotate(0deg)';
        } else {
          content.classList.add('accordion-open');
          target.setAttribute('aria-expanded', 'true');
          chevron.style.transform = 'rotate(180deg)';
        }
      });
    });
    
    // ÂàùÂßãÂåñÂ±ïÂºÄÁä∂ÊÄÅ
    accordionButtons.forEach(button => {
      const sectionId = button.getAttribute('data-accordion-toggle');
      
      if (!sectionId) return;
      
      const content = document.querySelector(`[data-accordion-content="${sectionId}"]`) as HTMLElement;
      const chevron = button.querySelector('.accordion-chevron') as HTMLElement;
      
      if (!content || !chevron) return;
      
      if (content.classList.contains('accordion-open')) {
        button.setAttribute('aria-expanded', 'true');
        chevron.style.transform = 'rotate(180deg)';
      }
    });
  }
  
  // È°µÈù¢Âä†ËΩΩÂÆåÊàêÂêéÂàùÂßãÂåñ
  document.addEventListener('DOMContentLoaded', initAccordion);
</script>

<!-- ‰º†ÈÄíÈÖçÁΩÆÂà∞ÂÆ¢Êà∑Á´Ø -->
<script data-sidebar-config type="application/json">
  {
    "allowMultipleOpen": ${sidebarConfig.allowMultipleOpen}
  }
</script>

<style>
  .accordion-sidebar {
    @apply sticky top-8;
    max-height: calc(100vh - 2rem);
    overflow-y: auto;
  }
  
  .accordion-section {
    @apply border-b border-gray-100 last:border-b-0;
  }
  
  .accordion-header-wrapper {
    @apply w-full flex items-center justify-between bg-white hover:bg-gray-50 transition-colors duration-200;
  }
  
  .accordion-header-wrapper.active {
    @apply bg-gray-100;
  }
  
  .accordion-title-link {
    @apply flex items-center flex-1 px-5 py-5 text-gray-800 hover:text-gray-700 font-medium text-xl text-left no-underline transition-colors duration-200;
  }
  
  .accordion-title-link:hover {
    @apply text-gray-700;
  }
  
  .accordion-toggle-btn {
    @apply flex items-center justify-center p-3 text-gray-400;
  }
  
  .accordion-toggle-btn:focus {
    @apply outline-none;
  }
  
  .accordion-chevron {
    @apply text-current flex-shrink-0;
  }
  
  .accordion-header-wrapper.active .accordion-chevron {
    @apply text-gray-600;
  }
  
  .accordion-content {
    @apply overflow-hidden transition-all duration-300;
    max-height: 0;
    opacity: 0;
  }
  
  .accordion-content.accordion-open {
    @apply opacity-100;
    max-height: 600px;
  }
  
  .accordion-list {
    @apply py-2 bg-gray-50;
  }
  
  .accordion-link {
    @apply flex items-center justify-between px-6 py-3 text-gray-600 hover:bg-white hover:text-gray-800 transition-colors duration-200 text-lg;
  }
  
  .accordion-link.active {
    @apply bg-white text-gray-800 font-medium;
  }
  
  .accordion-count {
    @apply text-sm text-gray-400 ml-2;
  }
  
  .accordion-link:hover .accordion-count {
    @apply text-gray-600;
  }
  
  .accordion-link.active .accordion-count {
    @apply text-gray-600;
  }
  
  /* Ëá™ÂÆö‰πâÊªöÂä®Êù° */
  .accordion-sidebar::-webkit-scrollbar {
    width: 6px;
  }
  
  .accordion-sidebar::-webkit-scrollbar-track {
    @apply bg-gray-100 rounded-full;
  }
  
  .accordion-sidebar::-webkit-scrollbar-thumb {
    @apply bg-gray-300 rounded-full;
  }
  
  .accordion-sidebar::-webkit-scrollbar-thumb:hover {
    @apply bg-gray-400;
  }
  
  /* ÁßªÂä®ËÆæÂ§áÈÄÇÈÖç */
  @media (max-width: 1024px) {
    .accordion-sidebar {
      @apply static mb-6;
      max-height: none;
    }
    
    .accordion-content.accordion-open {
      max-height: 400px;
    }
  }
  
  /* Âä®ÁîªÊïàÊûú */
  .accordion-content.accordion-open {
    animation: slideDown 0.3s ease-out;
  }
  
  @keyframes slideDown {
    from {
      max-height: 0;
      opacity: 0;
    }
    to {
      max-height: 600px;
      opacity: 1;
    }
  }
  
  /* ÂìçÂ∫îÂºèÂ≠ó‰ΩìÂ§ßÂ∞è */
  @media (max-width: 640px) {
    .accordion-title-link {
      @apply text-lg px-4 py-4;
    }
    
    .accordion-toggle-btn {
      @apply p-2;
    }
    
    .accordion-link {
      @apply text-base px-5 py-3;
    }
  }
  
  /* Á¨¨‰∏Ä‰∏™ËèúÂçïÈ°πÁöÑÁâπÊÆäÊ†∑Âºè */
  .accordion-section:first-child .accordion-header-wrapper {
    @apply border-t-0;
  }
  
  /* ÊøÄÊ¥ªÁä∂ÊÄÅÁöÑÂä†Âº∫ËßÜËßâÊïàÊûú */
  .accordion-header-wrapper.active {
    @apply shadow-sm;
  }
  
  .accordion-header-wrapper.active:hover {
    @apply bg-gray-200;
  }
</style> 