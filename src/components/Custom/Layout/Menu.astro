---
// SSG静态菜单组件 - 构建时获取菜单数据
import { getMenus, getSupportedLanguages } from "@apis/common";
import { getDictionary } from "../../../i18n/dictionaries.js";
import { themeConfig } from "../../../config/theme.js";
import { buildUrl } from "../../../lib/envConfig.js";
import { getLangFromHostname } from "../../../lib/languageConfig.js";
import { LanguageSelector } from "../LanguageSelector/index.ts";

// 获取当前页面路径，用于服务端渲染时设置选中状态
const currentPath = Astro.url.pathname;
// 优先从路径解析语言；若路径无语言前缀，再尝试从子域名解析
const pathLangMatch = currentPath.match(/^\/([a-z]{2}(-[A-Z]{2,4})?)(\/|$)/);
let currentLang = pathLangMatch
  ? pathLangMatch[1]
  : getLangFromHostname(Astro.url.hostname);

// 加载翻译数据
const t = await getDictionary(currentLang);

// 动态生成菜单链接 - 根据环境使用不同的URL策略
function withLang(path: string) {
  return buildUrl(currentLang, path);
}

// 在构建时获取菜单数据
interface MenuItem {
  name: string;
  path: string;
  children?: MenuItem[];
}

let menuItems: MenuItem[] = [];
try {
  menuItems = await getMenus(currentLang);
} catch (error) {
  // 如果接口失败，不显示任何菜单
  menuItems = [];
}

// 获取支持的语言列表（从 Strapi API，不做硬编码回退）
let supportedLanguages: Array<{
  localeCode: string;
  name: string;
  locale?: string;
}> = [];
try {
  supportedLanguages = await getSupportedLanguages();
} catch (error) {
  supportedLanguages = [];
}
---

<!-- 引入字体图标库 -->
<link rel="stylesheet" href="/fontIcons/iconfont.css" />

<!-- 桌面端菜单 - 完整的导航栏布局 -->
<div class="w-full flex items-center justify-between h-full">
  <!-- 左侧主导航菜单 -->
  <nav class="flex items-center" aria-label="主要导航">
    {
      menuItems.map((item, index) => (
        <div class="relative dropdown-container">
          <div class="flex items-center">
            <a
              href={withLang(item.path)}
              class={`menu-item text-white font-semibold text-center py-4 ${
                currentPath === item.path ||
                (currentPath === "/" && item.path === "/")
                  ? "active"
                  : ""
              }`}
              style="font-size: 2rem; width: 15rem; display: flex; align-items: center; justify-content: center;"
              data-path={item.path}
              data-index={index}
            >
              {item.name}
            </a>
          </div>
          {item.children && (
            <div
              class="dropdown-menu absolute top-full left-0 bg-white shadow-lg border-gray-200 rounded-md overflow-hidden z-50">
              {item.children.map((child, index) => (
                <div class="menu-item-wrapper relative">
                  <a
                    href={withLang(child.path)}
                    class={`product-menu-item flex items-center px-6 py-4 text-gray-800 hover:bg-red-50 hover:text-red-600 transition-all duration-200 border-b border-gray-100 last:border-b-0 ${index === 0 ? "featured-item" : ""}`}
                    style="font-size: 1.5rem;"
                  >
                    <div class="flex-1">
                      <div class="font-medium">{child.name}</div>
                    </div>
                    {child.children && child.children.length > 0 && (
                      <span class="ml-2 text-gray-400 text-xs">▶</span>
                    )}
                  </a>
                  {child.children}
                  {/* 二级子菜单 */}
                  {child.children && child.children.length > 0 && (
                    <div
                      class="submenu absolute left-full top-0 bg-white shadow-lg border border-gray-200 rounded-md overflow-hidden z-50">
                      <div class="submenu-header bg-gray-50 px-6 py-3 border-b border-gray-200">
                        <h4 class="text-lg font-semibold text-gray-800">
                          {child.name}
                        </h4>
                        <p class="text-sm text-gray-600 mt-1">
                          选择具体产品类型
                        </p>
                      </div>
                      {child.children.map((subChild, subIndex) => (
                        <div class="submenu-item relative">
                          <a
                            href={withLang(subChild.path)}
                            class="flex items-center px-6 py-4 text-gray-700 hover:bg-red-50 hover:text-red-600 transition-all duration-200 border-b border-gray-100 last:border-b-0"
                            style="font-size: 1.4rem;"
                          >
                            <div class="flex-1">
                              <div class="font-medium">{subChild.name}</div>
                            </div>
                            {subChild.children &&
                              subChild.children.length > 0 && (
                                <span class="ml-2 text-gray-400 text-xs">
                                  ▶
                                </span>
                              )}
                          </a>

                          {/* 三级子菜单 */}
                          {subChild.children &&
                            subChild.children.length > 0 && (
                              <div
                                class="thirdmenu absolute left-full top-0 bg-white shadow-lg border border-gray-200 rounded-md overflow-hidden z-50"
                                style="min-width: 24rem; display: none;"
                              >
                                <div class="thirdmenu-header bg-red-50 px-6 py-3 border-b border-red-200">
                                  <h5 class="text-base font-semibold text-red-800">
                                    {subChild.name}
                                  </h5>
                                  <p class="text-xs text-red-600 mt-1">
                                    详细规格
                                  </p>
                                </div>
                                {subChild.children.map(
                                  (thirdChild, thirdIndex) => (
                                    <a
                                      href={withLang(thirdChild.path)}
                                      class="flex items-center px-6 py-3 text-gray-600 hover:bg-red-50 hover:text-red-700 transition-all duration-200 border-b border-gray-100 last:border-b-0"
                                      style="font-size: 1.3rem;"
                                    >
                                      <div class="flex-1">
                                        <div class="font-medium">
                                          {thirdChild.name}
                                        </div>
                                      </div>
                                    </a>
                                  ),
                                )}
                              </div>
                            )}
                        </div>
                      ))}
                    </div>
                  )}
                </div>
              ))}
            </div>
          )}
        </div>
      ))
    }
  </nav>

  <!-- 右侧功能区 -->
  <div class="flex items-center space-x-4">
    <!-- Pagefind 搜索框 -->
    <div class="relative" id="header-search-container">
      <input
        type="text"
        id="header-search-input"
        placeholder={t.placeholder.search}
        class="round bg-red-500/95 border border-red-400/30 text-white placeholder-white/70 px-4 py-2 rounded-md focus:outline-none focus:ring-2 focus:ring-white/50 transition-all duration-200"
        style="width: 30rem; font-size: 1.4rem;"
        autocomplete="off"
      />
      <button
        type="submit"
        id="header-search-button"
        class="absolute right-2 top-1/2 transform -translate-y-1/2 text-white/70 hover:text-white transition-colors text-lg"
      >
      </button>

      <!-- Pagefind 搜索结果下拉框 -->
      <div
        id="header-search-results"
        class="hidden absolute top-full left-0 right-0 mt-1 bg-white border border-gray-200 rounded-lg shadow-lg z-50 max-h-64 overflow-y-auto"
        style="width: 30rem;"
      >
        <div id="header-search-results-content" class="p-2">
          <!-- Pagefind 搜索结果将在这里显示 -->
        </div>
      </div>
    </div>

    <!-- 购物车图标和地球图标 - 按原型图样式 -->
    <div class="flex items-center">
      <!-- 购物车图标 -->
      <button
        class="text-white hover:text-white/80 transition-colors duration-200 p-2"
      >
        <i class="iconfont icon-goumai w-8 h-8 text-2xl"></i>
      </button>

      <!-- 垂直分隔线 -->
      <div class="border-l border-white/30 h-8 mx-6"></div>

      <!-- 地球图标 -->
      <i class="iconfont icon-diqiu w-8 h-8 text-white text-2xl"></i>
    </div>

    <!-- 语言选择器 -->
    <LanguageSelector
      supportedLanguages={supportedLanguages}
      currentLang={currentLang}
      showLanguageSelector={themeConfig.languageSelector.showLanguageSelector}
      hideWhenSingleLanguage={themeConfig.languageSelector
        .hideWhenSingleLanguage}
    />
  </div>
</div>

<!-- 移动端菜单内容 -->
<div id="mobile-menu-items" class="hidden">
  {
    menuItems.map((item, index) => (
      <a
        href={withLang(item.path)}
        class={`block text-white hover:text-red-400 rounded-lg px-4 py-3 font-semibold focus-visible-ring touch-manipulation mobile-menu-item border-b border-gray-600 last:border-b-0 ${index === 0 ? "mobile-active" : ""}`}
        data-path={item.path}
        data-index={index}
      >
        {item.name}
      </a>
    ))
  }
</div>
<style>
  /* 菜单初始状态 - 防止闪烁 */
  nav {
    visibility: visible;
    opacity: 1;
  }

  /* 菜单容器预加载优化 */
  .dropdown-container {
    will-change: transform;
  }

  /* 页面加载时的平滑过渡 */
  @media (prefers-reduced-motion: no-preference) {
    .menu-item {
      transition: background-color 0.15s ease-out;
    }
  }

  .dropdown-container {
    position: relative;
  }

  /* 下拉菜单样式 */
  .dropdown-menu {
    position: absolute;
    top: 100%;
    left: 0;
    background: white;
    border-radius: 3px;
    z-index: 1000;
    min-width: 24rem;
    display: none;
    /* transform: translateY(-15px) scale(0.95);
    transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1); */
  }

  .dropdown-container:hover .dropdown-menu {
    display: block;
  }

  /* 下拉菜单头部 */
  .dropdown-header h3 {
    margin: 0;
    font-size: 1.8rem;
  }

  .dropdown-header p {
    margin: 0;
    font-size: 1.4rem;
  }

  /* 产品菜单项样式 */
  .product-menu-item {
    position: relative;
    transition: all 0.2s ease;
  }

  .product-menu-item:hover {
    background: linear-gradient(to right, #fef2f2, #ffffff);
    transform: translateX(8px);
  }

  .product-menu-item:hover .menu-icon {
    background-color: #dc2626;
    color: white;
    transform: scale(1);
  }

  .product-menu-item .menu-icon {
    transition: all 0.2s ease;
  }

  /* 特色菜单项 */
  .featured-item {
    background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
    border-left: 4px solid #dc2626;
  }

  .featured-item .menu-icon {
    background: linear-gradient(135deg, #dc2626, #b91c1c);
    color: white;
  }

  /* 下拉菜单底部 */
  .dropdown-footer {
    background: linear-gradient(to right, #f9fafb, #f3f4f6);
  }

  /* 下拉箭头动画 */
  .dropdown-arrow {
    transition: transform 0.2s ease;
  }

  /* 有下拉菜单的菜单项 */
  .has-dropdown {
    position: relative;
  }

  /* 多级菜单样式 */
  .menu-item-wrapper {
    position: relative;
  }
  /* 移动端优化 */
  @media (max-width: 768px) {
    .mobile-menu-item {
      padding: 12px 16px;
      font-size: 16px;
    }

    /* 移动端选中状态 */
    .mobile-menu-item.mobile-active {
      background-color: #b91c1c !important;
      color: white !important;
    }

    /* 移动端默认第一个选中 */
    .mobile-menu-item[data-index="0"] {
      background-color: #b91c1c;
      color: white;
    }

    /* 移动端隐藏多级菜单 */
    .sub-dropdown-menu,
    .third-level-menu {
      display: none !important;
    }
  }
</style>
