---
// 全局搜索组件
import { performSearch, getSearchSuggestions } from '../lib/searchIndex.js';
import { getCommonTextSync } from '../lib/commonTranslations.js';

const { lang = 'en' } = Astro.props;
const common = await import(`../locales/${lang}/common.json`);
const commonData = common.default;
---

<div class="global-search" id="global-search">
  <form class="relative" id="search-form">
    <div class="relative">
      <input 
        type="text" 
        id="search-input"
        placeholder={getCommonTextSync(commonData, 'placeholders.search')}
        class="w-full px-4 py-3 pl-12 pr-4 text-gray-700 bg-white border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent transition-all duration-200"
        autocomplete="off"
        aria-label="搜索"
      />
      <div class="absolute inset-y-0 left-0 flex items-center pl-3">
        <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
        </svg>
      </div>
      <button 
        type="submit"
        class="absolute inset-y-0 right-0 flex items-center pr-3"
        aria-label="搜索"
      >
        <svg class="w-5 h-5 text-gray-400 hover:text-red-600 transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
        </svg>
      </button>
    </div>
    
    <!-- 搜索建议 -->
    <div 
      id="search-suggestions" 
      class="hidden absolute top-full left-0 right-0 mt-1 bg-white border border-gray-200 rounded-lg shadow-lg z-50 max-h-48 overflow-y-auto"
    >
      <div id="suggestions-content" class="p-2">
        <!-- 搜索建议将在这里显示 -->
      </div>
    </div>
    
    <!-- 搜索结果下拉框 -->
    <div 
      id="search-results" 
      class="hidden absolute top-full left-0 right-0 mt-1 bg-white border border-gray-200 rounded-lg shadow-lg z-50 max-h-96 overflow-y-auto"
    >
      <div id="search-results-content" class="p-2">
        <!-- 搜索结果将在这里显示 -->
      </div>
    </div>
  </form>
</div>

<script define:vars={{ lang }}>
  // 全局搜索功能实现
  function initGlobalSearch() {
    const searchInput = document.getElementById('search-input');
    const searchForm = document.getElementById('search-form');
    const searchResults = document.getElementById('search-results');
    const searchResultsContent = document.getElementById('search-results-content');
    const searchSuggestions = document.getElementById('search-suggestions');
    const suggestionsContent = document.getElementById('suggestions-content');
    
    let debounceTimer = null;
    let currentQuery = '';
    
    // 搜索数据（将在运行时生成）
    let searchData = null;
    
    // 初始化搜索数据
    async function initSearchData() {
      try {
        const { generateSearchIndex } = await import('/src/lib/searchIndex.js');
        searchData = generateSearchIndex();
      } catch (error) {
        console.error('Failed to load search data:', error);
      }
    }
    
    // 执行搜索
    async function performSearch(query, showSuggestions = false) {
      if (!query || query.trim() === '') {
        hideResults();
        hideSuggestions();
        return;
      }
      
      try {
        const { performSearch: searchFunction, getSearchSuggestions } = await import('/src/lib/searchIndex.js');
        
        if (showSuggestions) {
          // 显示搜索建议
          const suggestions = await getSearchSuggestions(query, lang);
          displaySuggestions(suggestions, query);
        } else {
          // 执行完整搜索
          const results = await searchFunction(query, lang);
          displayResults(results, query);
        }
      } catch (error) {
        console.error('Search error:', error);
        hideResults();
        hideSuggestions();
      }
    }
    
    // 显示搜索建议
    function displaySuggestions(suggestions, query) {
      if (suggestions.length === 0) {
        hideSuggestions();
        return;
      }
      
      suggestionsContent.innerHTML = suggestions.map(suggestion => `
        <button 
          class="w-full text-left p-3 hover:bg-gray-50 border-b border-gray-100 last:border-b-0 text-sm text-gray-700"
          onclick="document.getElementById('search-input').value = '${suggestion}'; document.getElementById('search-form').dispatchEvent(new Event('submit'));"
        >
          <div class="flex items-center space-x-2">
            <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg>
            <span>${highlightText(suggestion, query)}</span>
          </div>
        </button>
      `).join('');
      
      showSuggestions();
    }
    
    // 显示搜索结果
    function displayResults(results, query) {
      if (results.length === 0) {
        searchResultsContent.innerHTML = `
          <div class="p-4 text-center text-gray-500">
            <svg class="w-12 h-12 mx-auto mb-2 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.34 0-4.47-.881-6.08-2.33" />
            </svg>
            <p>未找到 "${query}" 的相关结果</p>
            <p class="text-sm mt-1">请尝试其他关键词</p>
          </div>
        `;
      } else {
        searchResultsContent.innerHTML = results.map(item => `
          <a href="${item.url}" class="block p-3 hover:bg-gray-50 border-b border-gray-100 last:border-b-0">
            <div class="flex items-start space-x-3">
              <div class="flex-shrink-0">
                <img src="${item.image}" alt="${item.title || ''}" class="w-12 h-12 object-cover rounded" onerror="this.style.display='none'">
              </div>
              <div class="flex-1 min-w-0">
                <h4 class="text-sm font-medium text-gray-900 truncate">${highlightText(item.title, query)}</h4>
                <p class="text-xs text-gray-500 mt-1 line-clamp-2">${highlightText(item.excerpt, query)}</p>
                <div class="flex items-center mt-2 space-x-2">
                  <span class="inline-block text-xs px-2 py-1 rounded ${getCategoryColor(item.type)}">${getCategoryLabel(item.type)}</span>
                  ${item.date ? `<span class="text-xs text-gray-400">${formatDate(item.date)}</span>` : ''}
                </div>
              </div>
            </div>
          </a>
        `).join('');
      }
      
      showResults();
    }
    
    // 高亮文本
    function highlightText(text, query) {
      if (!query || !text) return text;
      const regex = new RegExp(`(${query.replace(/[.*+?^${}()|[\]\\]/g, '\\$&')})`, 'gi');
      return text.replace(regex, '<mark class="bg-yellow-200 px-1 rounded">$1</mark>');
    }
    
    // 获取分类颜色
    function getCategoryColor(type) {
      const colors = {
        product: 'bg-blue-100 text-blue-600',
        news: 'bg-green-100 text-green-600',
        case: 'bg-purple-100 text-purple-600'
      };
      return colors[type] || 'bg-gray-100 text-gray-600';
    }
    
    // 获取分类标签
    function getCategoryLabel(type) {
      const labels = {
        product: '产品',
        news: '新闻',
        case: '案例'
      };
      return labels[type] || '其他';
    }
    
    // 格式化日期
    function formatDate(dateStr) {
      try {
        const date = new Date(dateStr);
        return date.toLocaleDateString('zh-CN');
      } catch {
        return dateStr;
      }
    }
    
    function showResults() {
      searchResults.classList.remove('hidden');
      hideSuggestions();
    }
    
    function hideResults() {
      searchResults.classList.add('hidden');
    }
    
    function showSuggestions() {
      searchSuggestions.classList.remove('hidden');
      hideResults();
    }
    
    function hideSuggestions() {
      searchSuggestions.classList.add('hidden');
    }
    
    // 绑定事件
    searchInput.addEventListener('input', (e) => {
      const query = e.target.value.trim();
      currentQuery = query;
      
      clearTimeout(debounceTimer);
      
      if (query.length >= 2) {
        debounceTimer = setTimeout(() => {
          performSearch(query, true); // 显示建议
        }, 300);
      } else {
        hideResults();
        hideSuggestions();
      }
    });
    
    searchForm.addEventListener('submit', (e) => {
      e.preventDefault();
      const query = searchInput.value.trim();
      if (query) {
        performSearch(query, false); // 执行完整搜索
      }
    });
    
    // 点击外部关闭搜索结果
    document.addEventListener('click', (e) => {
      if (!searchForm.contains(e.target)) {
        hideResults();
        hideSuggestions();
      }
    });
    
    // 键盘导航
    searchInput.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        hideResults();
        hideSuggestions();
        searchInput.blur();
      }
    });
    
    // 初始化搜索数据
    initSearchData();
  }
  
  // 初始化搜索
  document.addEventListener('DOMContentLoaded', initGlobalSearch);
</script>

<style>
  .global-search {
    @apply relative;
  }
  
  mark {
    @apply bg-yellow-200 px-1 rounded;
  }
  
  /* 搜索结果样式 */
  #search-results,
  #search-suggestions {
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  }
  
  #search-results a:hover,
  #search-suggestions button:hover {
    @apply bg-gray-50;
  }
  
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  /* 响应式设计 */
  @media (max-width: 768px) {
    .global-search {
      @apply w-full;
    }
    
    #search-input {
      @apply text-sm;
    }
    
    #search-results,
    #search-suggestions {
      @apply max-h-64;
    }
  }
</style> 