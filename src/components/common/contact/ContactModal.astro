---
import { getDictionary } from "@i18n/dictionaries.js";
import ItalkinForm from "../italkin/form.astro";

// 联系表单模态组件
interface Props {
  id: string;
  title?: string;
  showCloseButton?: boolean;
  lang: string;
}

const { id, title, showCloseButton = true, lang = "en" } = Astro.props;

// 确保数据结构正确
let t = await getDictionary(lang);
---

<!-- 模态背景遮罩 -->
<div
  id={id}
  class="contact-modal-overlay fixed inset-0 z-50 hidden flex items-center justify-center p-4"
>
  <!-- 模态内容 -->
  <div
    class="contact-modal bg-white rounded-lg shadow-xl max-w-4xl w-full max-h-[90vh] overflow-y-auto"
  >
    <!-- 模态头部 -->
    <div class="flex items-center justify-between p-6 border-b border-gray-200">
      <h3 class="text-xl font-semibold text-gray-900">{title}</h3>
      {
        showCloseButton && (
          <button
            class="modal-close-btn text-gray-400 hover:text-gray-600 transition-colors duration-200"
            aria-label="关闭"
          >
            <svg
              class="w-6 h-6"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M6 18L18 6M6 6l12 12"
              />
            </svg>
          </button>
        )
      }
    </div>

    <!-- 表单内容 -->
    <div class="p-6">
      <ItalkinForm id="modal-page-form" showTitle={false} successMode="toast" transitions={t} />
    </div>
  </div>
</div>

<script>
  // 联系表单模态功能
  class ContactModal {
    private modal: HTMLElement | null;
    private overlay: Element | null;
    private closeBtn: Element | null;

    constructor(modalId = "contactModal") {
      this.modal = document.getElementById(modalId);
      this.overlay =
        this.modal?.querySelector(".contact-modal-overlay") || null;
      this.closeBtn = this.modal?.querySelector(".modal-close-btn") || null;

      this.init();
    }

    init() {
      if (!this.modal) return;

      // 关闭按钮事件
      this.closeBtn?.addEventListener("click", () => this.close());

      // 点击遮罩关闭
      this.overlay?.addEventListener("click", (e) => {
        if (e.target === this.overlay) {
          this.close();
        }
      });

      // ESC键关闭
      document.addEventListener("keydown", (e) => {
        if (e.key === "Escape" && this.isOpen()) {
          this.close();
        }
      });

      // 全局打开模态的方法
      (window as any).openContactModal = (
        productInfo: { name?: string } = {},
      ) => {
        this.open(productInfo);
      };
    }

    open(productInfo: { name?: string } = {}) {
      if (!this.modal) return;

      this.modal.classList.remove("hidden");
      document.body.style.overflow = "hidden";

      // 焦点管理
      const firstInput = this.modal.querySelector(
        "input, textarea",
      ) as HTMLElement;
      firstInput?.focus();
    }

    close() {
      if (!this.modal) return;

      this.modal.classList.add("hidden");
      document.body.style.overflow = "";
    }

    isOpen() {
      return this.modal && !this.modal.classList.contains("hidden");
    }
  }

  // 初始化模态
  document.addEventListener("DOMContentLoaded", () => {
    new ContactModal();

    // 监听来自子表单成功提示按钮的动作
    document.addEventListener("contactFormSuccessAction", (e: any) => {
      try {
        // 可根据 action 进行不同处理，这里统一关闭模态
        const modalEl = document.getElementById("contactModal");
        if (modalEl && !modalEl.classList.contains("hidden")) {
          modalEl.classList.add("hidden");
          document.body.style.overflow = "";
        }
      } catch (_) {}
    });
  });
</script>

<style>
  .contact-modal-overlay {
    backdrop-filter: blur(2px);
    background-color: rgba(255, 255, 255, 0.3);
  }

  .contact-modal {
    animation: modalSlideIn 0.3s ease-out;
  }

  @keyframes modalSlideIn {
    from {
      opacity: 0;
      transform: scale(0.95) translateY(-20px);
    }
    to {
      opacity: 1;
      transform: scale(1) translateY(0);
    }
  }

  .contact-modal-overlay.hidden {
    display: none !important;
  }

  /* 响应式设计 */
  @media (max-width: 640px) {
    .contact-modal {
      margin: 1rem;
      max-width: calc(100% - 2rem);
    }
  }
</style>

