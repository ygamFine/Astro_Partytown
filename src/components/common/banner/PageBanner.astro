---
import { getBannerData } from '@apis/homeBanner.js';
import { themeConfig } from '@config/theme.js';
import { Image } from 'astro:assets';

// 获取banner数据
const banners = await getBannerData('common');

interface Props {
  title: string;
  subtitle?: string;
  height?: 'small' | 'medium' | 'large';
  textAlign?: 'left' | 'center' | 'right';
  className?: string;
  showText?: boolean;
  showOverlay?: boolean;
}

const {
  title,
  subtitle,
  height,
  textAlign = 'center',
  className = '',
  showText = true,
  showOverlay = true
} = Astro.props;

// 从配置文件获取高度配置
const finalHeight = (height || themeConfig.layout.banner.defaultHeight) as 'small' | 'medium' | 'large';
const bannerHeight = themeConfig.layout.banner.desktopHeightClasses[finalHeight];

// 处理banner数据
const strapiBannerImages = banners && banners.length > 0 ? banners.map(banner => ({
  image: banner.desktopImage,
  mobileImage: banner.mobileImage,
  shipin: banner.shipin,
  alt: String(banner.alt || banner.name || title)
})) : [];

const hasStrapiBanners = strapiBannerImages.length > 0;
const shouldShowCarousel = hasStrapiBanners && strapiBannerImages.length > 1;

// 文本对齐配置
const textAlignClasses = {
  left: 'text-left',
  center: 'text-center',
  right: 'text-right'
};

// 图片尺寸
const imageSize = themeConfig.layout.banner.imageSize.desktop;
---

<div 
  class={`relative ${showText ? 'text-white' : ''} ${className} ${showOverlay ? 'show-overlay' : ''} banner-container`}
  style={`height: ${bannerHeight};`}
>
  {/* Strapi轮播图片 */}
  {hasStrapiBanners ? (
    <div class="banner-carousel" id="page-banner-carousel">
      {strapiBannerImages.map((bannerImg, index) => (
        <div class={`banner-slide ${index === 0 ? 'active' : ''}`}>
          <Image
            src={bannerImg.image}
            alt={bannerImg.alt}
            width={imageSize.width}
            height={500}
            loading={index === 0 ? "eager" : "lazy"}
            fetchpriority={index === 0 ? "high" : "auto"}
            decoding="async"
            format="webp"
            quality={85}
            class="banner-bg-image"
            style="width: 100%; height: 100%; object-fit: cover; object-position: center;"
          />
        </div>
      ))}
      
    </div>
  ) : null}
  
  {/* 遮罩层 */}
  {hasStrapiBanners && showOverlay && (
    <div class="banner-overlay"></div>
  )}
  
  {/* 内容层 */}
  {showText && (
    <div class="banner-content">
      <div class="container mx-auto px-4">
        <div class={textAlignClasses[textAlign]}>
          <h1 class="text-5xl md:text-6xl lg:text-7xl font-bold leading-tight mb-4">
            {title}
          </h1>
          {subtitle && (
            <p class="text-xl text-red-100 max-w-2xl mx-auto">
              {subtitle}
            </p>
          )}
        </div>
      </div>
    </div>
  )}
</div>

<style>
  .banner-container {
    @apply relative overflow-hidden;
  }
  
  .banner-carousel {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    z-index: 1;
  }
  
  .banner-slide {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
  }
  
  .banner-slide.active {
    opacity: 1;
  }
  
  .banner-bg-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    display: block;
  }
  
  .banner-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 2;
  }
  
  .banner-content {
    position: relative;
    z-index: 3;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
  }
</style>

<script type="text/javascript">
  (function() {
    let currentSlide = 0;
    let autoSlideTimer = null;
    
    const slides = document.querySelectorAll('#page-banner-carousel .banner-slide');
    const totalSlides = slides.length;
    const slideInterval = 5000;

    function goToSlide(index) {
      if (index === currentSlide || totalSlides <= 1) return;
      
      slides[currentSlide].classList.remove('active');
      currentSlide = index;
      slides[currentSlide].classList.add('active');
    }

    function nextSlide() {
      const next = (currentSlide + 1) % totalSlides;
      goToSlide(next);
    }

    function startAutoSlide() {
      if (totalSlides <= 1) return;
      if (autoSlideTimer) clearInterval(autoSlideTimer);
      autoSlideTimer = setInterval(nextSlide, slideInterval);
    }

    function stopAutoSlide() {
      if (autoSlideTimer) {
        clearInterval(autoSlideTimer);
        autoSlideTimer = null;
      }
    }

    function initBanner() {
      if (totalSlides <= 1) return;
      
      if (slides.length > 0) {
        slides[0].classList.add('active');
      }

      document.addEventListener('visibilitychange', () => {
        if (document.hidden) {
          stopAutoSlide();
        } else {
          startAutoSlide();
        }
      });

      startAutoSlide();
    }

    function init() {
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initBanner);
      } else {
        initBanner();
      }
    }

    init();
  })();
</script>

