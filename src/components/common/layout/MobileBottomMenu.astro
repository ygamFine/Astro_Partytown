---
import { getMobileBottomMenu } from '../../../lib/strapi.js';
import { getIconClass } from '../../../lib/iconUtils.js';

export interface Props {
  lang?: string;
  currentPath?: string;
}

const { lang = 'en', currentPath = '/' } = Astro.props;

// 获取移动端底部菜单数据（按语言缓存）
const menuItems = await getMobileBottomMenu(lang);

// 判断当前路径是否激活
function isActive(path: string, currentPath: string): boolean {
  if (path === '/') {
    return currentPath === '/';
  }
  return currentPath.startsWith(path);
}

// 获取菜单链接
function getMenuLink(item: { customLink?: string; inlineAddress?: string; externalLink?: string; type: string }, lang: string): string {
  // 优先级：Inline_address > field_zidingyilianjie > 默认值
  if (item.inlineAddress) {
    // 内链地址，添加语言前缀
    const cleanPath = item.inlineAddress.startsWith('/') ? item.inlineAddress : `/${item.inlineAddress}`;
    return `/${lang}${cleanPath}`;
  }
  if (item.externalLink || item.customLink) {
    // 外链或自定义链接，直接使用
    return item.externalLink || item.customLink || '#';
  }
  // 默认值
  return '#';
}

// 注意：getIconClass 现在从 iconUtils 导入，提供全站统一的图标管理
---

<!-- 移动端底部菜单 -->
<nav 
  class="mobile-bottom-menu fixed bottom-0 left-0 right-0 z-50 bg-white border-t border-gray-200 shadow-lg md:hidden"
  data-pagefind-ignore
>
  <div class="flex items-center justify-around px-2 py-2">
    {menuItems.map((item: { 
      id: number; 
      type: string; 
      content: string; 
      icon: string; 
      iconType: string; 
      customLink?: string;
      inlineAddress?: string;
      externalLink?: string;
    }) => {
      const link = getMenuLink(item, lang);
      const active = isActive(link, currentPath);
      
      return (
        <a
          href={link}
          class={`flex flex-col items-center justify-center w-full py-1 px-2 transition-all duration-200 ${
            active 
              ? 'text-blue-600' 
              : 'text-gray-600 hover:text-blue-500'
          }`}
          data-menu-type={item.type}
          data-menu-id={item.id}
        >
          <div class={`w-5 h-5 mb-1 transition-colors duration-200 flex items-center justify-center ${
            active ? 'text-blue-600' : 'text-gray-500'
          }`}>
            {item.iconType === 'image' ? (
              <img src={item.icon} alt="menu icon" class="w-5 h-5 object-contain" />
            ) : (
              <i class={`${getIconClass(item.icon)} text-xl`}></i>
            )}
          </div>
          <span class="text-xs font-medium leading-none text-center block">
            {item.content}
          </span>
        </a>
      );
    })}
  </div>
</nav>

<!-- 为底部菜单预留空间 -->
<div class="h-16 md:hidden"></div>

<style>
  /* 移动端底部菜单样式 */
  .mobile-bottom-menu {
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    background-color: rgba(255, 255, 255, 0.95);
    min-height: 60px;
  }
  
  /* 确保图标和文字有足够间距 */
  .mobile-bottom-menu a {
    min-height: 50px;
    gap: 2px;
  }
  
  .mobile-bottom-menu .w-6 {
    flex-shrink: 0;
  }
  
  .mobile-bottom-menu span {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 100%;
  }
  
  /* 激活状态动画 */
  .mobile-bottom-menu a[data-menu-type] {
    position: relative;
    overflow: hidden;
  }
  
  .mobile-bottom-menu a[data-menu-type]:active {
    transform: scale(0.95);
  }
  
  /* 激活状态指示器 */
  .mobile-bottom-menu a[data-menu-type].text-blue-600::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 50%;
    transform: translateX(-50%);
    width: 4px;
    height: 4px;
    background-color: #2563eb;
    border-radius: 50%;
  }
  
  /* 响应式调整 */
  @media (max-width: 360px) {
    .mobile-bottom-menu .text-xs {
      font-size: 10px;
    }
    
    .mobile-bottom-menu .w-5 {
      width: 18px;
      height: 18px;
    }
  }
  
  /* 深色模式支持 */
  @media (prefers-color-scheme: dark) {
    .mobile-bottom-menu {
      background-color: rgba(17, 24, 39, 0.95);
      border-color: #374151;
    }
    
    .mobile-bottom-menu a {
      color: #9ca3af;
    }
    
    .mobile-bottom-menu a:hover {
      color: #60a5fa;
    }
    
    .mobile-bottom-menu a.text-blue-600 {
      color: #60a5fa;
    }
    
    .mobile-bottom-menu a.text-blue-600 .w-6 {
      color: #60a5fa;
    }
  }
</style>

<script>
  // 移动端底部菜单交互逻辑
  document.addEventListener('DOMContentLoaded', function() {
    const menuItems = document.querySelectorAll('.mobile-bottom-menu a[data-menu-type]');
    
    menuItems.forEach((item: Element) => {
      item.addEventListener('click', function(this: HTMLElement, e: Event) {
        const menuType = this.getAttribute('data-menu-type');
        const href = this.getAttribute('href');
        
        // 如果有自定义链接且不是特殊处理的链接，直接跳转
        if (href && href !== '#' && href !== '#contact-modal' && href !== '#whatsapp') {
          // 判断是否为外部链接
          if (href.startsWith('http://') || href.startsWith('https://')) {
            e.preventDefault();
            window.open(href, '_blank');
            return;
          }
          // 内部链接正常跳转
          return;
        }
        
        // 处理特殊菜单类型
        if (menuType === 'inquiry' && href === '#contact-modal') {
          e.preventDefault();
          // 触发联系表单模态框
          const contactModal = document.getElementById('contact-modal');
          if (contactModal) {
            contactModal.classList.remove('hidden');
            contactModal.classList.add('flex');
          }
          return;
        }
        
        if (menuType === 'whatsapp' && href === '#whatsapp') {
          e.preventDefault();
          // 打开WhatsApp
          const phoneNumber = '+86-xxx-xxxx-xxxx'; // 替换为实际的电话号码
          const message = encodeURIComponent('您好，我想了解更多关于您的产品信息。');
          window.open(`https://wa.me/${phoneNumber}?text=${message}`, '_blank');
          return;
        }
        
        // 添加点击反馈
        (this as HTMLElement).style.transform = 'scale(0.95)';
        setTimeout(() => {
          (this as HTMLElement).style.transform = '';
        }, 150);
      });
    });
    
    // 移除滚动隐藏菜单功能，保持菜单始终可见
  });
</script>
