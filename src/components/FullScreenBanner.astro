---
// FullScreenBanner.astro - 高度优化版本
---

<!-- 预加载关键Banner图片 -->
<link rel="preload" as="image" href="/images/optimized/banner3-optimized.webp?v=1" type="image/webp" fetchpriority="high">

<!-- PC端Banner容器 -->
<section class="banner-container desktop-banner" id="desktop-banner">
  <!-- Banner轮播 -->
  <div class="banner-carousel">
    <!-- Banner 1 - 默认显示，LCP关键 -->
    <div class="banner-slide active">
      <img 
        src="/images/optimized/banner3-optimized.webp?v=3" 
        alt="专业滑移装载机制造商"
        width="1440"
        height="600"
        loading="eager"
        fetchpriority="high"
        decoding="sync"
        style="width: 100%; height: 100%; object-fit: cover; object-position: center;"
      />
    </div>
    
    <!-- Banner 2 -->
    <div class="banner-slide">
      <img 
        src="/images/optimized/banner222-optimized.webp?v=3" 
        alt="高品质工程机械设备"
        width="1440"
        height="600"
        loading="lazy"
        decoding="async"
        style="width: 100%; height: 100%; object-fit: cover; object-position: center;"
      />
    </div>
    
    <!-- Banner 3 -->
    <div class="banner-slide">
      <img 
        src="/images/optimized/banner-optimized.webp?v=3" 
        alt="值得信赖的合作伙伴"
        width="1440"
        height="600"
        loading="lazy"
        decoding="async"
        style="width: 100%; height: 100%; object-fit: cover; object-position: center;"
      />
    </div>
  </div>

  <!-- Progress Bar Controller -->
  <div class="progress-controller">
    <button id="prev-label" class="slide-label">PREV</button>
    <div class="progress-bar-container">
      <div id="progress-fill" class="progress-fill"></div>
    </div>
    <button id="next-label" class="slide-label">NEXT</button>
  </div>
</section>

<style>
  /* Banner容器样式 - 基础样式已在Layout中定义 */
  .banner-carousel {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
  }

  .banner-slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
    will-change: opacity;
  }

  .banner-slide.active {
    opacity: 1;
  }

  /* Progress Controller */
  .progress-controller {
    position: absolute;
    bottom: 3.2rem;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 3.2rem;
    z-index: 10;
  }

  .slide-label {
    background: none;
    border: none;
    color: white;
    font-size: 1.8rem;
    font-weight: 500;
    letter-spacing: 0.2rem;
    cursor: pointer;
    user-select: none;
    padding: 0;
    margin: 0;
    transition: opacity 0.2s ease;
  }

  .slide-label:hover {
    opacity: 0.8;
  }

  .progress-bar-container {
    position: relative;
    width: 38.4rem;
    height: 0.2rem;
    background-color: rgba(255, 255, 255, 0.2);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .progress-fill {
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 0%;
    background-color: rgba(255, 255, 255, 1);
    transition: width linear;
  }

  /* PC端强制显示 */
  .desktop-banner {
    display: block !important;
    position: relative;
    width: 100%;
    height: 80rem;
    overflow: hidden;
    background: #f3f4f6;
    z-index: 1;
    margin: 0;
    padding: 0;
  }

  /* 移动端隐藏 */
  @media (max-width: 768px) {
    .desktop-banner {
      display: none !important;
    }
  }
</style>

<script>
  // 轻量级Banner轮播 - 最小JavaScript
  (() => {
    if (window.innerWidth <= 768) return; // 移动端不执行
    
    const banner = document.getElementById('desktop-banner');
    if (!banner) return;
    
    let currentSlide = 0;
    const slides = banner.querySelectorAll('.banner-slide');
    const progressFill = document.getElementById('progress-fill');
    const totalSlides = slides.length;
    const slideInterval = 5000;
    
    if (totalSlides <= 1) return;
    
    let progressTimer;
    let autoSlideTimer;
    
    const goToSlide = (index) => {
      if (index === currentSlide) return;
      
      slides[currentSlide].classList.remove('active');
      currentSlide = index;
      slides[currentSlide].classList.add('active');
      
      resetProgress();
      startProgress();
    };
    
    const nextSlide = () => {
      goToSlide((currentSlide + 1) % totalSlides);
    };
    
    const prevSlide = () => {
      goToSlide((currentSlide - 1 + totalSlides) % totalSlides);
    };
    
    const resetProgress = () => {
      if (progressTimer) clearInterval(progressTimer);
      if (progressFill) progressFill.style.width = '0%';
    };
    
    const startProgress = () => {
      if (!progressFill) return;
      
      let progress = 0;
      const step = 100 / (slideInterval / 50);
      
      progressTimer = setInterval(() => {
        progress += step;
        progressFill.style.width = Math.min(progress, 100) + '%';
        
        if (progress >= 100) {
          clearInterval(progressTimer);
        }
      }, 50);
    };
    
    const startAutoSlide = () => {
      autoSlideTimer = setInterval(nextSlide, slideInterval);
      startProgress();
    };
    
    const stopAutoSlide = () => {
      if (autoSlideTimer) clearInterval(autoSlideTimer);
      resetProgress();
    };
    
    // 事件监听
    const prevBtn = document.getElementById('prev-label');
    const nextBtn = document.getElementById('next-label');
    
    if (prevBtn) prevBtn.addEventListener('click', () => {
      stopAutoSlide();
      prevSlide();
      startAutoSlide();
    });
    
    if (nextBtn) nextBtn.addEventListener('click', () => {
      stopAutoSlide();
      nextSlide();
      startAutoSlide();
    });
    
    // 鼠标悬停控制
    banner.addEventListener('mouseenter', stopAutoSlide);
    banner.addEventListener('mouseleave', startAutoSlide);
    
    // 启动轮播
    startAutoSlide();
  })();
</script> 