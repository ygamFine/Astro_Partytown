---
// 环境检测
const isProd = import.meta.env.PROD;
const isDev = import.meta.env.DEV;
const mode = import.meta.env.MODE;

// GTM配置
const GTM_ID = 'GTM-5MNNZB76'; // 替换成你的 GTM ID

// 调试信息
console.log(`🔧 GTM Loader - 环境: ${mode}, 生产模式: ${isProd}, GTM ID: ${GTM_ID}`);
---

<!-- 🎯 智能GTM动态加载器 - 支持URL参数控制 -->
<script is:inline define:vars={{ isProd, isDev, GTM_ID }}>
  (function() {
    // 🔍 运行时环境和参数检测
    const urlParams = new URLSearchParams(window.location.search);
    const hasGTMDebug = urlParams.has('gtm_debug');
    const hasGTMPreview = urlParams.has('gtm_preview');
    const gtmAuth = urlParams.get('gtm_auth') || '';
    const gtmPreview = urlParams.get('gtm_preview') || '';
    
    // 🧠 智能模式判断
    const forceDebugMode = hasGTMDebug || hasGTMPreview;
    const usePartytown = isProd && !forceDebugMode;
    const isDebugMode = isDev || forceDebugMode;
    
    console.log(`🔧 [GTM] 运行模式: ${usePartytown ? 'Partytown' : 'Standard'}`);
    console.log(`🔧 [GTM] 调试模式: ${isDebugMode ? '启用' : '禁用'}`);
    console.log(`🔧 [GTM] URL参数: debug=${hasGTMDebug}, preview=${hasGTMPreview}`);

    // 初始化 dataLayer
    window.dataLayer = window.dataLayer || [];
    
    // 添加环境和参数信息到数据层
    window.dataLayer.push({
      'environment': isProd ? 'production' : 'development',
      'gtm_mode': usePartytown ? 'partytown' : 'standard',
      'debug_mode': isDebugMode,
      'url_debug': hasGTMDebug,
      'url_preview': hasGTMPreview,
      'gtm.start': new Date().getTime(),
      'event': 'gtm.js'
    });

    // 🛠️ 调试工具和监听（调试模式下）
    if (isDebugMode) {
      console.log('🐛 [GTM Debug] DataLayer 已初始化:', window.dataLayer);
      
      // 监听 dataLayer 变化
      const originalPush = window.dataLayer.push;
      window.dataLayer.push = function(...args) {
        console.log('🐛 [GTM Debug] DataLayer Push:', args);
        return originalPush.apply(this, args);
      };

      // 创建调试助手
      window.gtmDebug = {
        push: (data) => {
          console.log('🧪 [GTM Debug] 手动推送事件:', data);
          window.dataLayer.push(data);
        },
        getDataLayer: () => {
          console.log('🧪 [GTM Debug] 当前 dataLayer:', window.dataLayer);
          return window.dataLayer;
        },
        testEvent: () => {
          const testData = {
            event: 'test_event',
            event_category: 'development',
            event_action: 'manual_test',
            event_label: 'gtm_debug_helper',
            timestamp: new Date().toISOString()
          };
          window.dataLayer.push(testData);
          console.log('🧪 [GTM Debug] 测试事件已发送:', testData);
        },
        reload: () => {
          console.log('🔄 [GTM Debug] 重新加载GTM...');
          location.reload();
        }
      };
      
      console.log('🧪 [GTM Debug] 调试助手已加载，可用命令:');
      console.log('  - gtmDebug.push(data)     // 推送自定义事件');
      console.log('  - gtmDebug.getDataLayer() // 查看数据层');
      console.log('  - gtmDebug.testEvent()    // 发送测试事件');
      console.log('  - gtmDebug.reload()       // 重新加载页面');
    }

    // 🚀 动态创建GTM脚本
    function createGTMScript() {
      // 构建GTM URL参数
      let gtmParams = '';
      if (isDebugMode) {
        gtmParams += '&gtm_debug=true';
      }
      if (gtmAuth) {
        gtmParams += `&gtm_auth=${gtmAuth}`;
      }
      if (gtmPreview) {
        gtmParams += `&gtm_preview=${gtmPreview}`;
      }

      // 创建脚本内容
      const scriptContent = `
        (function(w,d,s,l,i){
          w[l]=w[l]||[];
          var f=d.getElementsByTagName(s)[0],
              j=d.createElement(s),
              dl=l!='dataLayer'?'&l='+l:'';
          j.async=true;
          j.src='https://www.googletagmanager.com/gtm.js?id='+i+dl+'${gtmParams}';
          
          j.onload=function(){
            const mode = '${usePartytown ? 'Partytown' : 'Standard'}';
            console.log('✅ [GTM] GTM脚本加载成功 (' + mode + ' 模式)');
            ${isDebugMode ? `
            setTimeout(() => {
              if (window.google_tag_manager) {
                console.log('🔍 [GTM Debug] GTM容器信息:', Object.keys(window.google_tag_manager));
              }
            }, 1000);
            ` : ''}
          };
          
          j.onerror=function(e){
            console.error('❌ [GTM] GTM脚本加载失败:', e);
            ${isDebugMode ? `
            console.warn('💡 [GTM Debug] 可能的原因:');
            console.warn('  - 网络连接问题');
            console.warn('  - GTM容器ID错误');
            console.warn('  - CORS限制（${usePartytown ? 'Partytown模式' : '标准模式'}）');
            ` : ''}
          };
          
          f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','${GTM_ID}');
      `;

      // 创建脚本元素
      const script = document.createElement('script');
      script.type = usePartytown ? 'text/partytown' : 'text/javascript';
      script.innerHTML = scriptContent;

      // 添加到页面
      document.head.appendChild(script);

      console.log(`🚀 [GTM] 脚本已创建 (类型: ${script.type})`);
    }

    // 🏃‍♂️ 立即执行或等待加载完成
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', createGTMScript);
    } else {
      createGTMScript();
    }

  })();
</script>

<!-- 🎯 智能noscript回退 - 支持所有模式 -->
<!-- <script is:inline define:vars={{ GTM_ID }}>
  // 创建noscript回退
  (function() {
    const noscript = document.createElement('noscript');
    const iframe = document.createElement('iframe');
    
    // 检查URL参数
    const urlParams = new URLSearchParams(window.location.search);
    const gtmAuth = urlParams.get('gtm_auth') || '';
    const gtmPreview = urlParams.get('gtm_preview') || '';
    
    // 构建iframe参数
    let iframeParams = '';
    if (gtmAuth) iframeParams += `&gtm_auth=${gtmAuth}`;
    if (gtmPreview) iframeParams += `&gtm_preview=${gtmPreview}`;
    
    iframe.src = `https://www.googletagmanager.com/ns.html?id=${GTM_ID}${iframeParams}`;
    iframe.height = '0';
    iframe.width = '0';
    iframe.style.display = 'none';
    iframe.style.visibility = 'hidden';
    iframe.title = 'Google Tag Manager';
    
    noscript.appendChild(iframe);
    document.head.appendChild(noscript);
  })();
</script> -->

<!-- 🔍 GTM 最终验证检查 -->
<script is:inline>
  // 页面加载完成后的最终验证
  window.addEventListener('load', function() {
    setTimeout(() => {
      const urlParams = new URLSearchParams(window.location.search);
      const isDebugMode = urlParams.has('gtm_debug') || urlParams.has('gtm_preview');
      
      if (window.dataLayer && window.dataLayer.length > 0) {
        console.log('✅ [GTM] 配置验证通过 - DataLayer已初始化');
        
        if (isDebugMode) {
          console.log('🔍 [GTM Debug] 最终验证 - DataLayer内容:', window.dataLayer);
          if (window.google_tag_manager) {
            console.log('🔍 [GTM Debug] GTM管理器状态: loaded');
            console.log('🔍 [GTM Debug] 容器数量:', Object.keys(window.google_tag_manager).length);
          } else {
            console.warn('⚠️ [GTM Debug] GTM管理器尚未完全加载');
          }
        }
      } else {
        console.error('❌ [GTM] 验证失败 - DataLayer未正确初始化');
      }
    }, 3000);
  });
</script>

<style>
  /* 🎨 GTM组件样式优化 */
  noscript iframe {
    position: absolute !important;
    top: -9999px !important;
    left: -9999px !important;
    width: 0 !important;
    height: 0 !important;
    border: none !important;
    visibility: hidden !important;
    display: none !important;
  }
</style> 