name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  repository_dispatch:
    types: [webhook-trigger]
  workflow_dispatch:
  schedule:
    # 每10分钟检查数据变化，仅在有变化时重建
    - cron: '*/10 * * * *'

jobs:
  check-and-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Check data changes
        id: check-changes
        run: |
          # 获取当前Strapi数据
          CURRENT_DATA=$(curl -s -H "Authorization: Bearer 2980bc69d09c767b2ca2e1c211a285c9f48985775a3f1d1313025838a611abbfe6d892a29b3417407ddd798d69a9f67f063c27d13827c1765f96b4bc19601295ac11fb9552f4a16ede2745813e3b536827069875ae8c5089a36da57cf69d08b252093e2100e0cc88ac700ca6cd6ebd196f0002bd5fb8219222ed778f8858ad21" \
            "http://47.251.126.80/api/menus" | jq -c '.data')
          
          # 获取上次构建的数据哈希
          LAST_HASH=$(cat .last-data-hash 2>/dev/null || echo "")
          
          # 计算当前数据哈希
          CURRENT_HASH=$(echo "$CURRENT_DATA" | sha256sum | cut -d' ' -f1)
          
          echo "Last hash: $LAST_HASH"
          echo "Current hash: $CURRENT_HASH"
          
          if [ "$LAST_HASH" != "$CURRENT_HASH" ]; then
            echo "🔄 数据已变化，需要重建"
            echo "needs-rebuild=true" >> $GITHUB_OUTPUT
            echo "$CURRENT_HASH" > .last-data-hash
          else
            echo "✅ 数据无变化，跳过重建"
            echo "needs-rebuild=false" >> $GITHUB_OUTPUT
          fi
        
      - name: Commit data hash
        if: steps.check-changes.outputs.needs-rebuild == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .last-data-hash
          git commit -m "📊 更新数据哈希" || exit 0
          git push
        
      - name: Build
        if: steps.check-changes.outputs.needs-rebuild == 'true'
        run: npm run build
        
      - name: Setup Pages
        if: steps.check-changes.outputs.needs-rebuild == 'true'
        uses: actions/configure-pages@v3
        
      - name: Upload artifact
        if: steps.check-changes.outputs.needs-rebuild == 'true'
        uses: actions/upload-pages-artifact@v2
        with:
          path: './dist'
          
      - name: Deploy to GitHub Pages
        if: steps.check-changes.outputs.needs-rebuild == 'true'
        id: deployment
        uses: actions/deploy-pages@v2